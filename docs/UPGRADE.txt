
###
### Notes on available BOA branches and licenses
###

 => BOA is available in three main branches, but only LITE for installation:

  * LITE which remains completely free to use without any kind of license
    as it was from the beginning (previously named HEAD or STABLE).
    This branch should be considered as BOA LTS with slow updates, focused
    on both security and bug fixes, but very limited new features additions.

  * DEV which requires paid license for both install and upgrade and includes
    the latest features, security and bug fixes and installed services versions.
    This branch shouldn't be used in production without extensive testing.

  * PRO which requires paid license and is available only as an upgrade
    from either LITE or DEV (or previous HEAD/STABLE) is the branch with regular
    monthly or bi-monthly releases, closely following tested DEV branch.

 => Once you install BOA LITE and want to upgrade to PRO with license obtained
    from https://omega8.cc/licenses you will need to replace up-lite in all
    examples below with up-pro

 => Once you install BOA LITE or PRO and want to upgrade to DEV with license
    from https://omega8.cc/licenses you will need to replace up-lite in all
    examples below with up-dev


###
### Automatic BOA System Major Upgrade Tool
###

 => You can easily upgrade your system from any supported Debian version,
    starting with Debian Jessie, to Devuan Chimaera or Devuan Daedalus which
    are both systemd-free equivalents of Debian Bullseye and Debian Bookworm.

    The same tool can be used to upgrade from Devuan Beowulf to currently
    recommended Devuan Daedalus.

    NOTE: Only systems running Percona 5.7 are supported.

    Please follow the required steps closely!

    First, update your BOA Meta Installers with:

    $ wget -qO- http://files.aegir.cc/BOA.sh.txt | bash

    ###----------------------------------------###
    ### HOW-TO: Launch auto-upgrade properly   ###
    ###----------------------------------------###
    ###
    ###  Start with manual barracuda upgrade.
    ###
    ###    $ barracuda up-lite system
    ###
    ###  !!! CREATE A FRESH VM BACKUP SNAPSHOT !!!
    ###  !!! TEST THE FRESHLY CREATED BACKUP.. !!!
    ###  !!! BY USING IT TO CREATE NEW TEST VM !!!
    ###  !!! DO NOT CONTINUE UNTIL IT WORKS... !!!
    ###
    ###  Reboot the server to make sure there are
    ###  no issues with boot process.
    ###
    ###    $ reboot
    ###
    ###  If reboot worked and there are no issues,
    ###  you are ready for the automated magic...
    ###
    ###    $ touch /root/.run-to-chimaera.cnf
    ###      or
    ###    $ touch /root/.run-to-daedalus.cnf
    ###
    ###    $ service clean-boa-env start
    ###
    ###  Once enabled, the system will launch
    ###  a series of barracuda up-lite and reboots
    ###  until it migrates any supported Debian
    ###  or Devuan version to Devuan Chimaera or
    ###  Devuan Daedalus.
    ###
    ###  !!! WARNING !!!
    ###
    ###  EXPECT IT TO CRASH COMPLETELY, SO ONLY
    ###  FULL RESTORE FROM LATEST BACKUP SNAPSHOT
    ###  OF ENTIRE VM WILL BRING IT BACK TO LIVE.
    ###
    ###  DO NOT PROCEED UNTIL YOU ARE READY FOR
    ###  DISASTER RECOVERY FROM TESTED BACKUP!
    ###
    ###----------------------------------------###

 => NOTE FOR LEGACY SYSTEMS

    Servers running Debian Jetty or Debian Stretch must auto-upgrade to Devuan
    Chimaera first -- they can not run the auto-upgrade to Devuan Daedalus.
    Once on Chimaera, they can auto-upgrade to Devuan Daedalus.

 => This tool automates OS upgrades you can still run manually if you prefer,
    by adding respective variable to /root/.barracuda.cnf and running standard
    command 'barracuda up-lite system' for the manual steps based upgrade.

    @> Devuan to Devuan major OS upgrades
      * Devuan Chimaera    => upgrade to Daedalus with _CHIMAERA_TO_DAEDALUS=YES
      * Devuan Beowulf     => upgrade to Chimaera with _BEOWULF_TO_CHIMAERA=YES

    @> Debian to Devuan major OS upgrades
      * Debian 12 Bookworm => upgrade to Daedalus with _BOOKWORM_TO_DAEDALUS=YES
      * Debian 11 Bullseye => upgrade to Chimaera with _BULLSEYE_TO_CHIMAERA=YES
      * Debian 10 Buster   => upgrade to Beowulf with  _BUSTER_TO_BEOWULF=YES
      * Debian  9 Stretch  => upgrade to Beowulf with  _STRETCH_TO_BEOWULF=YES
      * Debian  8 Jessie   => upgrade to Beowulf with  _JESSIE_TO_BEOWULF=YES

    @> Debian to Debian major OS upgrades
      * Debian 11 Bullseye => upgrade to Bookworm with _BULLSEYE_TO_BOOKWORM=YES
      * Debian 10 Buster   => upgrade to Bullseye with _BUSTER_TO_BULLSEYE=YES
      * Debian  9 Stretch  => upgrade to Buster with   _STRETCH_TO_BUSTER=YES
      * Debian  8 Jessie   => upgrade to Stretch with  _JESSIE_TO_STRETCH=YES

 => NOTE: This tool will automatically disable all installed but not used
          in any existing site PHP versions, effectively enforcing otherwise
          optional procedure normally triggered on barracuda upgrade if the
          control file exists: /root/.allow-php-multi-install-cleanup.cnf

          Side note: it will not affect migration/upgrade from Debian Bullseye
          to Devuan Chimaera, though, since it doesn't involve re-installing
          all existing PHP versions normally required in other major upgrades,
          which otherwise significantly extends the procedure for no good
          reasons (not used PHP versions should be skipped and deactivated).

          To re-install disabled PHP versions after all upgrades are already
          completed, run this command:

            $ barracuda php-idle enable

          To disable not used PHP versions again, run this command:

            $ barracuda php-idle disable


###
### Important Notes for Standard/Manual BOA Upgrade
###

 => If you haven't run full barracuda+octopus upgrade to BOA Latest available
    Edition yet, don't use any partial upgrade modes explained further below.
    Once new BOA Latest is available, you must run *full* upgrades with commands:

    $ wget -qO- http://files.aegir.cc/BOA.sh.txt | bash
    $ barracuda up-lite
    $ barracuda up-lite system              (recommended on major upgrade)
    $ octopus up-lite all force
    $ bash /var/xdrago/manage_ltd_users.sh (recommended on major upgrade)
    $ bash /var/xdrago/daily.sh            (recommended on major upgrade)

    For silent, logged mode with email message sent once the upgrade is
    complete, but no progress is displayed in the terminal window, you can run
    alternatively, starting with screen session to avoid incomplete upgrade
    if your SSH session will be closed for any reason before the upgrade
    will complete:

    $ screen
    $ wget -qO- http://files.aegir.cc/BOA.sh.txt | bash
    $ barracuda up-lite log
    $ octopus up-lite all force log

    Note that the silent, non-interactive mode will automatically say Y/Yes
    to all prompts and is thus useful to run auto-upgrades scheduled in cron.

 => Don't run any installer via sudo.
    You must be logged in as root or `sudo -i` first.

 => All commands will honor settings in their respective config files:

    /root/.barracuda.cnf
    /root/.o1.octopus.cnf

    However, arguments specified on command line will take precedence - see
    upgrade modes explained below.


###
### Available Standard Upgrade Modes
###

    Download and run (as root) BOA Meta Installers first:

    $ wget -qO- http://files.aegir.cc/BOA.sh.txt | bash

 => To upgrade system and Aegir Master Instance to Latest use:

    $ barracuda up-lite

 => To upgrade selected Aegir Satellite Instance to Latest use:

    $ octopus up-lite o1 force

 => To upgrade *all* Aegir Satellite Instances to Latest use:

    $ octopus up-lite all force


###
### Available Custom Upgrade Modes
###

 => You can append "log" as the last argument to every command, and it will
    write the output to the file instead of to the console, respectively:

    /var/backups/reports/up/barracuda/*
    /var/backups/reports/up/octopus/*

    Examples:

    $ barracuda up-lite log
    $ octopus up-lite all force log

    Detailed backend log on barracuda upgrade is always stored in /var/backups/

 => You can append "system" as a last argument to the barracuda command, and
    it will upgrade only the system, without running Aegir Master Instance
    upgrade, plus it will write the output to the file instead of console:

    /var/backups/reports/up/barracuda/*

    Example:

    $ barracuda up-lite system

    Note that while both "log" and "system" modes are "silent", because they
    don't display anything in your console, they will send the log via email
    to your address specified in the config file: /root/.barracuda.cnf

    It is recommended that you start `screen` before running commands using
    the "silent" mode - to avoid confusion or incomplete tasks when your
    SSH connection drops for any reason.

 => It is possible to set/force the upgrade mode on the fly using optional
    arguments: {aegir|platforms|both}

    Note that none is similar to "both", however "both" will force aegir plus
    platforms upgrade, while none will honor also settings from the octopus
    instance cnf file, where currently only "aegir" mode is defined with
    _HM_ONLY=YES option.

    Examples:

    $ octopus up-lite o1 aegir
    $ octopus up-lite o1 platforms log
    $ octopus up-lite all aegir log
    $ octopus up-lite all platforms


###
### NOTE on Aegir platforms
###

 => Since BOA no longer installs all bundled Aegir platforms during Octopus
    installation and upgrades, you will need to add some keywords
    to ~/static/control/platforms.info and run Octopus upgrade to have
    these platforms added as explained in the docs you can find in the
    file ~/control/README.txt within your Octopus account.
