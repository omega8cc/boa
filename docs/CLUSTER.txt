
### About the BOA Simple Cluster

Initial version of this installer supports 3 or more Percona XtraDB Cluster
Galera nodes, connected via ProxySQL load balancer to a single BOA web node,
all running on the same machine, or (soon) multiple machines, leveraging
Linux VServer guests to create separate VPS instances.

It's technically possible to install more BOA web nodes, each with its own
ProxySQL load balancer connected to the same Percona XtraDB Cluster, and
put some extra load balancers in front of these web nodes, along with
auto-sync for files on the web nodes, for a full High Availability setup,
but it is beyond the scope of this installer, at least for now.

Unless you expect to outgrow hardware capabilities provided by a single machine
with reliable multi-drive RAID6 array and enough of RAM and CPU power to
handle the load generated by PHP-FPM, Redis, Nginx and optionally Solr,
the installer provides scalable DB Cluster solution, which can be used
as a starting point for future expansion.

The multi-machine cluster design is a requirement when either you have
a low-end hardware and drives without RAID, or when the expected traffic
is too big to be handled by a single web node and/or by db nodes all running
on a single machine.

While the installer supports only single machine during initial setup,
it's easy to move some of created DB nodes to other machines in the same
network, if you can re-assign IP addresses between your machines on the fly.

Please note that Galera cluster should always run an odd number of nodes,
on the odd number of machines, and the odd number of data centers.

This requirement can be ignored safely only if there is Galera Arbitrator
installed on the web node, or another node connected to the cluster.
We plan to add it on the web node by default in the future, to improve
db cluster reliability.

Note that the installer will create a classic, standalone Barracuda+Octopus
pair on the web node, connected to the *locally* running db server, which is
not a part of the db cluster. This adds more flexibility and is intended
for testing future improvements and features, including ability to convert
existing standalone BOA servers to web+db clusters.

To leverage installed Percona XtraDB Cluster you will need to install another
Octopus instance on the web node, which will be configured on the fly to connect
via ProxySQL load balancer to the Percona XtraDB Cluster.

For more information on Percona XtraDB Cluster integration please read:

https://www.percona.com/doc/percona-xtradb-cluster/5.7/index.html
http://galeracluster.com/documentation-webpages/index.html
http://www.proxysql.com
https://www.percona.com/blog/2016/09/15/proxysql-percona-cluster-galera-integration/
http://galeracluster.com/documentation-webpages/limitations.html
http://mysql.rjweb.org/doc.php/galera
http://galeracluster.com/documentation-webpages/arbitrator.html


### Requirements

* Dedicated, single bare-metal machine (RAID & 32GB+ RAM recommended)
* Five+ IPs assigned (1 public host, 1 public web + 3 private or public for db)
* Debian Stretch minimal OS on the host machine
* SSH (RSA) keys for root with direct access (not via sudo etc.)


### BOA Simple Cluster Installer Setup

   $ apt-get update -qq && apt-get install wget -y -qq
   $ cd;rm -f cluster.sh
   $ cd;wget -q -U iCab http://files.aegir.cc/cluster/cluster.sh
   $ mv -f cluster.sh /usr/local/bin/cluster
   $ chmod 700 /usr/local/bin/cluster


### Usage: Configuration and Examples

   #=> Example for installing Linux VServer based BOA on a dedicated machine
       *without* any cluster configuration, just a BOA VPS:

   $ cluster in-host server.example.com
   $ reboot
   $ cluster up-host upgrade
   $ cluster in-vps v1 v1.example.com public.ip.address jessie head my@email

   #=> Example for installing complete BOA Simple Cluster

   Add listed below required lines to your /root/.cluster.cnf file.
   Required lines are marked with [R] and optional with [O]:

      #
     _CLUSTER_EMAIL=""   ### [R] Technical contact email
      #
      # Public IP and hostname with working DNS for the main web node
      #
     _WEB_NODE_IP=       ### [R] Public IP address assigned to the machine
     _WEB_FQDN=          ### [R] Valid FQDN pointing to WEB_NODE_IP
      #
      # An odd number of DB nodes in the array: 3, 5, 7 etc. numbered from 0
      #
     _DB_NODE_IP[0]=     ### [R] Private or Public IP address to use
     _DB_NODE_IP[1]=     ### [R] Private or Public IP address to use
     _DB_NODE_IP[2]=     ### [R] Private or Public IP address to use
      #
     _CLUSTER_PREFIX=c1r ### [O] For Linux VServer guests short names
     _CLUSTER_SUFFIX=    ### [O] For DB nodes FQDN hostnames: example.com
     _CLUSTER_OS=jessie  ### [O] Debian version: jessie
      #

   $ cluster in-host server.example.com
   $ reboot
   $ cluster up-host upgrade
   $ cluster in-all head
   $ cluster in-oct em@il o2 mini head

   #=> Example for upgrading BOA Simple Cluster

   #1 Update the manager script
   $ cd;rm -f cluster.sh
   $ cd;wget -q -U iCab http://files.aegir.cc/cluster/cluster.sh
   $ mv -f cluster.sh /usr/local/bin/cluster
   $ chmod 700 /usr/local/bin/cluster

   #2 Upgrade the host and all db and web heads
   $ cluster up-host update
   $ cluster up-dbs head
   $ cluster up-web head

   #3 Upgrade web head with master Aegir -- run again if upgrade fails
   $ vserver c1rweb exec /opt/local/bin/barracuda up-lite

   #4 Upgrade all Octopus instances -- run again if upgrade fails
   $ vserver c1rweb exec /opt/local/bin/octopus up-lite all force

   #=> All usage options

   Usage: cluster {in-host} {fqdn}
   Usage: cluster {up-host} {update|upgrade}
   Usage: cluster {in-vps} {id} {fqdn} {ip} {os} {stable|head|galera} {email}
   Usage: cluster {in-all} {stable|head}
   Usage: cluster {up-dbs} {stable|head}
   Usage: cluster {up-web} {stable|head}
   Usage: cluster {up-all} {stable|head}
   Usage: cluster {in-oct} {email} {o2} {mini|max|none} {stable|head}
   Usage: cluster {in-pxy} {id} {ip} force-reinstall
   Usage: cluster {check} {more|report} {backups|octopus}
