
Here are responses to some common Composer on BOA related questions.

The only documentation source for anything Aegir on BOA related is available at:
  https://learn.omega8.cc
  https://github.com/omega8cc/boa/issues?utf8=âœ“&q=is%3Aissue+composer

Since BOA-4.0.1 new Drupal 8 based platforms are included:

 Lightning 4.103 -------------- https://drupal.org/project/lightning
 Opigno LMS 2.11 -------------- https://drupal.org/project/opigno_lms
 Social 8.2 ------------------- https://drupal.org/project/social
 Thunder 4.5 ------------------ https://drupal.org/project/thunder
 Varbase 8.4 ------------------ https://drupal.org/project/varbase

IMPORTANT: You must switch your ~/static/control/cli.info to 7.1 or newer
PHP version (BOA hosted on Omega8.cc comes with 7,1, 7.2 and 7.3), because
D8 based distros require at least PHP 7.1 -- this also means that to run
the sites installed after switching cli.info to 7.1 or newer, you will also
need to either switch your ~/static/control/fpm.info to 7.1 or newer, or
more probably, to not break any existing sites not compatible with PHP 7.1+
you will need to list these D8 sites names in ~/static/control/multi-fpm.info

Please check for more information:
  https://learn.omega8.cc/how-to-quickly-switch-php-to-newer-version-330

BOA supports Drupal 8 codebases both with classic directory structure like
in Drupal 7 and also Drupal 8 distros you can download from Drupal.org, but
if you use Composer based codebase with different structure, the platform path
is not the codebase root directory, but the subdirectory where you see the
Drupal own index.php and "core" subdirectory. It can be platform-name/web or
platform-name/docroot or something similar depending on the distro design.

As you have discovered if you have already tried, the path you should use
in Aegir when adding Composer based codebase as a platform is the directory
where index.php resides, so effectively anything above that directory is not
available for web requests and thus safely protected.

The information from Aegir project docs saying "When verifying a platform,
Aegir runs composer install if a composer.json file is found." doesn't apply
to BOA. We have disabled this. There are several reasons, most importantly:

a/ having this feature enabled is actually against the codebase management
workflow in Aegir, because it may modify codebase on a live site,

b/ some tasks launch verify many times during clone and migrate, which
results with giant overhead and conflicts if we allowed it to run composer
install many times in parallel,

c/ from our experience, having this poorly implemented feature enabled breaks
clone and migration tasks between platforms when both have the composer.json
file. It just doesn't make any sense in our opinion. The implementation
should be improved to make it actually work similarly to Drush Makefiles.

You should think about Composer like it was Drush Make replacement, and you
should not re-build nor upgrade the codebase on a platform with sites already
hosted. Just use it to build new codebases and then add them as platforms
when the build works without errors.

Remember that Drush must be removed from the codebase, or it will take over
Aegir tasks and they will fail, but since BOA-4.0.1 our modified Aegir
backend will automatically check and remove drush from the vendor directory
if found, on every Verify.

You can modify the default path to configuration files in the site's
local.settings.php file. We are looking into making it easier to configure,
preferably with site level INI files which are easier to edit safely.
Just define your custom path in local.settings.php overriding the default:

  $config_directories[CONFIG_SYNC_DIRECTORY] = 'sites/sitename/private/config/sync';

Please check also the official docs at:
  https://www.drupal.org/docs/8/configuration-management/changing-the-storage-location-of-the-sync-directory

Please submit questions, suggestions and patches to improve the docs
in our issue queue at:
  https://github.com/omega8cc/boa/issues
