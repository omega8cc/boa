#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2024 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: https://github.com/omega8cc/boa
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###


###
### Helper variables
###
_bldPth="/opt/tmp/boa"
_crlGet="-L --max-redirs 3 -k -s --retry 3 --retry-delay 5 -A iCab"
_filIncO="octopus.sh.cnf"
_gCb="git clone --branch"
_gitHub="https://github.com/omega8cc"
_gitLab="https://gitlab.com/omega8cc"
_libFnc="${_bldPth}/lib/functions"
_tocIncO="${_filIncO}.$1"
_vBs="/var/backups"
_vSet="variable-set --always-set"
export _tRee=dev


###
### Panic on missing include
###
_panic_exit() {
  echo
  echo " EXIT: Required lib file not available?"
  echo " EXIT: $1"
  echo " EXIT: Cannot continue"
  echo " EXIT: Bye (0)"
  echo
  touch /opt/tmp/status-AegirSetupC-FAIL
  exit 1
}


###
### Include helper functions
###
if [ -e "${_vBs}/${_tocIncO}" ]; then
  source "${_vBs}/${_tocIncO}"
  _tInc="${_vBs}/${_tocIncO}"
elif [ -e "${_vBs}/${_filIncO}" ]; then
  source "${_vBs}/${_filIncO}"
  _tInc="${_vBs}/${_filIncO}"
else
  _panic_exit "${_tInc}"
fi


###
### Env debugging
###
if [ "${_DEBUG_MODE}" = "YES" ]; then
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
  echo Effective _USER is $1
  [ -r "${_vBs}/${_tocIncO}" ] && echo Effective _tocIncO is ${_tocIncO}
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
  env
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
fi


###
### More helper variables
###
_urlDev="http://${_USE_MIR}/dev"
_urlHmr="http://${_USE_MIR}/versions/${_tRee}/boa/aegir"


###
### Include shared functions
###
_FL="helper satellite"
for f in ${_FL}; do
  [ -r "${_libFnc}/${f}.sh.inc" ] || _panic_exit "${f}"
  source "${_libFnc}/${f}.sh.inc"
done


###
### Local variables
###
if [ "${_THIS_DB_HOST}" = "FQDN" ]; then
  _THIS_DB_HOST=$(uname -n 2>&1)
fi
_USE_AEGIR_VER=SRC
_T_BUILD=SRC
_RUN_VERIFY=NO
_DIST_INSTALL=NO
_STATUS=INIT
_USE_DISTRO_CORE=NO
_LOCAL_STATUS="${_STATUS}"
_ROOT="/data/disk/${_USER}"
_HM_ROOT="${_ROOT}/aegir/distro/${_HM_DISTRO}"
_DISTRO_ROOT="${_ROOT}/distro/${_DISTRO}"
_PREV_HM_ROOT="${_ROOT}/aegir/distro/${_LAST_HMR}"
_D="/data/all"
_SRCDIR="/opt/tmp/files"
_LOG="/var/backups/octopus-${_USER}-${_NOW}.log"
if [ "${_PHP_CLI_VERSION}" = "8.3" ] \
  && [ -x "/opt/php83/bin/php" ]; then
  _T_CLI=/opt/php83/bin
elif [ "${_PHP_CLI_VERSION}" = "8.2" ] \
  && [ -x "/opt/php82/bin/php" ]; then
  _T_CLI=/opt/php82/bin
elif [ "${_PHP_CLI_VERSION}" = "8.1" ] \
  && [ -x "/opt/php81/bin/php" ]; then
  _T_CLI=/opt/php81/bin
elif [ "${_PHP_CLI_VERSION}" = "8.0" ] \
  && [ -x "/opt/php80/bin/php" ]; then
  _T_CLI=/opt/php80/bin
elif [ "${_PHP_CLI_VERSION}" = "7.4" ] \
  && [ -x "/opt/php74/bin/php" ]; then
  _T_CLI=/opt/php74/bin
elif [ "${_PHP_CLI_VERSION}" = "7.3" ] \
  && [ -x "/opt/php73/bin/php" ]; then
  _T_CLI=/opt/php73/bin
elif [ "${_PHP_CLI_VERSION}" = "7.2" ] \
  && [ -x "/opt/php72/bin/php" ]; then
  _T_CLI=/opt/php72/bin
elif [ "${_PHP_CLI_VERSION}" = "7.1" ] \
  && [ -x "/opt/php71/bin/php" ]; then
  _T_CLI=/opt/php71/bin
elif [ "${_PHP_CLI_VERSION}" = "7.0" ] \
  && [ -x "/opt/php70/bin/php" ]; then
  _T_CLI=/opt/php70/bin
elif [ "${_PHP_CLI_VERSION}" = "5.6" ] \
  && [ -x "/opt/php56/bin/php" ]; then
  _T_CLI=/opt/php56/bin
fi
_DRUSHCMD="${_T_CLI}/php ${_ROOT}/tools/drush/drush.php"
#
PATH=${_T_CLI}:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
SHELL=/bin/bash
#
_pthPch="/opt/tmp/boa/aegir/patches"
_urlDrp="http://ftp.drupal.org/files/projects"
_urlPrt="https://drupal.org/project"
#
_noT="not installed"
_yOk="installation in progress..."


###---### Checking status.
#
if [ -e "${_ROOT}/log/setupmail.txt" ] \
  || [ -e "${_ROOT}/log/legacy_setupmail.txt" ] \
  || [ -e "${_ROOT}/log/latest_setupmail.txt" ]; then
  _STATUS=UPGRADE
  cd ${_ROOT}
fi


###---### User check.
#
if [ "${_DEBUG_MODE}" = "YES" ]; then
  _msg "${_STATUS} C: Aegir automated install script part C"
fi
if [ `whoami` = "root" ]; then
  _msg "${_STATUS} C: FATAL ERROR: This script should be run as a non-root user"
  _msg "${_STATUS} C: FATAL ERROR: Aborting AegirSetupC installer NOW!"
  touch /opt/tmp/status-AegirSetupC-FAIL
  exit 1
fi


###---### Hot Sauce check.
#
if [ "${_HOT_SAUCE}" = "NO" ]; then
  _CORE="/data/all/${_LAST_ALL}"
  _THIS_CORE="${_LAST_ALL}"
  if [ "${_USE_CURRENT}" = "YES" ] \
    && [ -e "/data/all/000/core-v-${_SMALLCORE6_V}.txt" ] \
    && [ -e "/data/all/000/core-v-${_SMALLCORE7_V}.txt" ]; then
    if [ "${_DEBUG_MODE}" = "YES" ]; then
      _msg "${_STATUS} C: Shared platforms code v.${_LAST_ALL} will be used"
    fi
  elif [ "${_USE_CURRENT}" = "NO" ] \
    || [ ! -e "/data/all/000/core-v-${_SMALLCORE6_V}.txt" ] \
    || [ ! -e "/data/all/000/core-v-${_SMALLCORE7_V}.txt" ]; then
    _CORE="/data/all/${_ALL_DISTRO}"
    _THIS_CORE="${_ALL_DISTRO}"
    _msg "${_STATUS} C: Shared platforms code v.${_ALL_DISTRO} (new) will be created"
  else
    if [ "${_DEBUG_MODE}" = "YES" ]; then
      _msg "${_STATUS} C: Shared platforms code v.${_LAST_ALL} will be used"
    fi
  fi
else
  _CORE="/data/all/${_ALL_DISTRO}"
  _THIS_CORE="${_ALL_DISTRO}"
  _msg "${_STATUS} C: Shared platforms code v.${_ALL_DISTRO} (new) will be created"
fi
_D6_CORE_DIR="/data/all/000/core/${_DRUPAL6}"
_D7_CORE_DIR="/data/all/000/core/${_DRUPAL7}"

_pthDst="${_ROOT}/distro/${_THIS_CORE}"

mkdir -p ${_pthDst}
chmod 0711 ${_ROOT}/distro &> /dev/null
chmod 0711 ${_pthDst} &> /dev/null

###---###
_ALLOW_ALL=YES
if [ "${_CLIENT_CORES}" -lt "1" ]; then
  _ALLOW_ALL=NO
  _D_8_ALLOW=NO
fi

###---### Custom Distributions full names.
#
_F_COMMERCE2="Commerce ${_COMMERCE2} ${_SMALLCORE7_V} [${_THIS_CORE}]"
_F_UBERCART6="Ubercart ${_UBERCART6} ${_SMALLCORE6_V} [${_THIS_CORE}]"
_F_UBERCART7="Ubercart ${_UBERCART7} ${_SMALLCORE7_V} [${_THIS_CORE}]"
#

###
###---### Functions.
###

#
# Prepare for Save & Verify Platforms.
_prepare_for_save_verify_platforms() {
  _LOCAL_STATUS="NOT_SET"
  if [ -e "/run/aegir_upgrade.pid" ]; then
    _LOCAL_STATUS=INIT
  fi
  if [ "${_LOCAL_STATUS}" = "INIT" ]; then
    _THIS_HM="${_HM_ROOT}/sites/${_DOMAIN}"
  else
    if [ -e "${_ROOT}/.drush/hostmaster.alias.drushrc.php" ]; then
      _THIS_HM=$(cat ${_ROOT}/.drush/hostmaster.alias.drushrc.php \
        | grep 'site_path' \
        | cut -d: -f2 \
        | awk '{ print $3}' 2>&1)
      _THIS_HM=$(echo ${_THIS_HM} | sed "s/[\,']//g" 2>&1)
    else
      _THIS_HM="${_HM_ROOT}/sites/${_DOMAIN}"
    fi
  fi
  if [ ! -d "${_THIS_HM}" ]; then
    _THIS_HM="${_PREV_HM_ROOT}/sites/${_DOMAIN}"
  fi
  if [ -d "${_THIS_HM}" ] && [ ! -e "${_THIS_HM}/make_platform.php" ]; then
    cp -af /opt/tmp/boa/aegir/helpers/make_platform.php.txt ${_THIS_HM}/make_platform.php
  fi
  if [ "${_SERIES_RESULT}" = "OK" ]; then
    _drhSrc="sites/all/drush/drushrc.php"
  else
    _drhSrc="drushrc.php"
  fi
}

#
# Save & Verify Platform
_save_verify_this_platform() {
  if [ -d "${_pthDst}/${6}-${2}-${3}${7}" ]; then
    if [ ! -e "${_pthDst}/${6}-${2}-${3}${7}/${_drhSrc}" ]; then
      if [ -d "${_THIS_HM}" ] && [ -e "${_THIS_HM}/make_platform.php" ]; then
        cd ${_THIS_HM}
        ${_DRUSHCMD} php-script make_platform "${4}" ${6} ${_pthDst}/${6}-${2}-${3}${7} &> /dev/null
      fi
    fi
  fi
}

#
# Complete Save & Verify Platforms.
_complete_save_verify_platforms() {
  if [ -e "/run/aegir_upgrade.pid" ]; then
    _PLATF_IMP=$(ls -la /data/u \
      | grep ${_USER} \
      | cut -d'>' -f2 \
      | sort \
      | uniq \
      | awk '{ print $1}')
    for _PLATF in ${_PLATF_IMP}; do
      if [[ "${_PLATF}" =~ "aegir" ]]; then
        _FOUND_HM=YES
      else
        _PLATF_NAME=${_PLATF##*/}
        ${_DRUSHCMD} php-script make_platform "${_PLATF_NAME} ($RANDOM)" default ${_PLATF}
      fi
    done
  fi
  rm -f make_platform.php
}

#
# Download and extract from core archive.
_get_core_ext() {
  if [ ! -z "$1" ]; then
    curl ${_crlGet} "http://${_USE_MIR}/core/$1" -o "$1"
    if [ -e "$1" ]; then
      _extract_archive "$1"
    else
      _msg "OOPS: $1 failed download from http://${_USE_MIR}/core/$1"
    fi
  fi
}

#
# Download and extract from distro archive.
_get_distro_ext() {
  if [ ! -z "$1" ]; then
    curl ${_crlGet} "http://${_USE_MIR}/distro/$1" -o "$1"
    if [ -e "$1" ]; then
      _extract_archive "$1"
    else
      _msg "OOPS: $1 failed download from http://${_USE_MIR}/distro/$1"
    fi
  fi
}

#
# Create standard directories.
_fix_dirs_files() {
  rm -f ./*.txt
  rm -f ./modules/*.txt
  rm -f ./themes/*.txt
  rm -rf ./modules/cookie_cache_bypass
  mkdir -p ./sites/default/files
  mkdir -p ./cache/{normal,perm}
  chmod -R 777 ./cache
  if [ -e "./sites/default/default.settings.php" ]; then
    cp -af ./sites/default/default.settings.php ./sites/default/settings.php
  fi
  chmod a+rw ./sites/default/settings.php
  chmod a+rwx ./sites/default/files
  mkdir -p ./profiles
  mkdir -p ./sites/all/{modules,libraries,themes}
  rm -f ./core/modules/*.txt
  rm -f ./core/themes/*.txt
  rm -f ./modules/*.txt
  rm -f ./themes/*.txt
  rm -f ./sites/all/*.txt
  echo empty > ./profiles/EMPTY.txt
  echo empty > ./sites/all/EMPTY.txt
  echo empty > ./sites/all/modules/EMPTY.txt
  echo empty > ./sites/all/libraries/EMPTY.txt
  echo empty > ./sites/all/themes/EMPTY.txt
  chmod 0755 ./profiles &> /dev/null
  chmod 0755 ./sites
  chmod 0755 ./sites/all
  chmod 02775 ./sites/all/{modules,libraries,themes}
  cp -af /opt/tmp/boa/aegir/conf/var/get.htaccess.txt ./.htaccess
  cp -af /opt/tmp/boa/aegir/conf/var/crossdomain.xml ./
}

#
# Create D6 symlinks.
_create_d6_symlinks() {
  if [ ! -L "includes" ]; then
    ln -sfn ${_D6_CORE_DIR}/.htaccess .htaccess
    ln -sfn ${_D6_CORE_DIR}/boost_stats.php boost_stats.php
    ln -sfn ${_D6_CORE_DIR}/cron.php cron.php
    ln -sfn ${_D6_CORE_DIR}/crossdomain.xml crossdomain.xml
    ln -sfn ${_D6_CORE_DIR}/includes includes
    ln -sfn ${_D6_CORE_DIR}/index.php index.php
    ln -sfn ${_D6_CORE_DIR}/install.php install.php
    ln -sfn ${_D6_CORE_DIR}/js.php js.php
    ln -sfn ${_D6_CORE_DIR}/misc misc
    ln -sfn ${_D6_CORE_DIR}/modules modules
    ln -sfn ${_D6_CORE_DIR}/themes themes
    ln -sfn ${_D6_CORE_DIR}/update.php update.php
    ln -sfn ${_D6_CORE_DIR}/xmlrpc.php xmlrpc.php
    cp -af ${_D6_CORE_DIR}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}

#
# Create D7 symlinks.
_create_d7_symlinks() {
  if [ ! -L "web.config" ]; then
    ln -sfn ${_D7_CORE_DIR}/.htaccess .htaccess
    ln -sfn ${_D7_CORE_DIR}/authorize.php authorize.php
    ln -sfn ${_D7_CORE_DIR}/cron.php cron.php
    ln -sfn ${_D7_CORE_DIR}/crossdomain.xml crossdomain.xml
    ln -sfn ${_D7_CORE_DIR}/includes includes
    ln -sfn ${_D7_CORE_DIR}/index.php index.php
    ln -sfn ${_D7_CORE_DIR}/install.php install.php
    ln -sfn ${_D7_CORE_DIR}/js.php js.php
    ln -sfn ${_D7_CORE_DIR}/misc misc
    ln -sfn ${_D7_CORE_DIR}/modules modules
    ln -sfn ${_D7_CORE_DIR}/themes themes
    ln -sfn ${_D7_CORE_DIR}/update.php update.php
    ln -sfn ${_D7_CORE_DIR}/web.config web.config
    ln -sfn ${_D7_CORE_DIR}/xmlrpc.php xmlrpc.php
    cp -af ${_D7_CORE_DIR}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}

#
# Create distro own D7 core symlinks.
_create_distro_d7_symlinks() {
  if [ ! -L "web.config" ]; then
    if [ ! -f "${_SHRD_PLPATH}/crossdomain.xml" ]; then
      rm -f ${_SHRD_PLPATH}/crossdomain.xml
      cd ${_SHRD_PLPATH}
      _fix_dirs_files
    fi
    if [ ! -L "${_SHRD_PLPATH}/modules/o_contrib_seven" ]; then
      ln -sfn ${_CORE}/o_contrib_seven ${_SHRD_PLPATH}/modules/o_contrib_seven
    fi
    cd ${_OCTO_PLPATH}
    ln -sfn ${_SHRD_PLPATH}/.htaccess .htaccess
    ln -sfn ${_SHRD_PLPATH}/authorize.php authorize.php
    ln -sfn ${_SHRD_PLPATH}/cron.php cron.php
    ln -sfn ${_SHRD_PLPATH}/crossdomain.xml crossdomain.xml
    ln -sfn ${_SHRD_PLPATH}/includes includes
    ln -sfn ${_SHRD_PLPATH}/index.php index.php
    ln -sfn ${_SHRD_PLPATH}/install.php install.php
    ln -sfn ${_CORE}/o_contrib_seven/js/js.php js.php
    ln -sfn ${_SHRD_PLPATH}/misc misc
    ln -sfn ${_SHRD_PLPATH}/modules modules
    ln -sfn ${_SHRD_PLPATH}/themes themes
    ln -sfn ${_SHRD_PLPATH}/update.php update.php
    ln -sfn ${_SHRD_PLPATH}/web.config web.config
    ln -sfn ${_SHRD_PLPATH}/xmlrpc.php xmlrpc.php
    cp -af ${_SHRD_PLPATH}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}

#
# Rename D7 profiles.
_rename_drupal7_profiles() {
  for _Files in `find ./profiles -type f`; do
    sed -i "s/name = Minimal/name = Vanilla Minimal/g"   ${_Files} &> /dev/null
    wait
    sed -i "s/name = Standard/name = Vanilla Standard/g" ${_Files} &> /dev/null
    wait
    sed -i "s/name = Testing/name = Vanilla Testing/g"   ${_Files} &> /dev/null
    wait
    sed -i "s/hidden = TRUE//g"                          ${_Files} &> /dev/null
    wait
  done
}

#
# Rename D9 profiles.
_rename_drupal9_profiles() {
  for _Files in `find ./core/profiles -type f`; do
    sed -i "s/name: Minimal/name: Vanilla Minimal/g"   ${_Files} &> /dev/null
    wait
    sed -i "s/name: Standard/name: Vanilla Standard/g" ${_Files} &> /dev/null
    wait
    sed -i "s/name: Testing/name: Vanilla Testing/g"   ${_Files} &> /dev/null
    wait
  done
}

#
# Prepare D6 core.
_prepare_drupal6_core() {
  if [ ! -e "${_D6_CORE_DIR}" ]; then
    if [ -L "${_D6_CORE_DIR}" ]; then
      unlink ${_D6_CORE_DIR}
    fi
    cd /data/all/000/core
    _get_core_ext "${_DRUPAL6}.tar.gz"
    find ${_D6_CORE_DIR} -type d -exec chmod 0755 {} \; &> /dev/null
    find ${_D6_CORE_DIR} -type f -exec chmod 0644 {} \; &> /dev/null
    cd ${_D6_CORE_DIR}/
    _fix_dirs_files
    patch -p0 < ${_pthPch}/taxonomy-6.26.patch &> /dev/null
    rm -f ${_D6_CORE_DIR}/modules/taxonomy/taxonomy.module.orig
    rm -f modules/o_contrib
    ln -s ${_CORE}/o_contrib modules/o_contrib
    ln -s ${_CORE}/o_contrib/js/js.php js.php
    cp -af ${_CORE}/o_contrib/image/image.imagemagick.inc includes/
    cp -af ${_CORE}/o_contrib/boost/stats/boost_stats.php ./ &> /dev/null
    rm -rf ${_D6_CORE_DIR}/scripts
    cd ${_D6_CORE_DIR}/themes
    _get_dev_contrib "rubik-6.x-3.0-beta5.tar.gz"
    _get_dev_contrib "tao-6.x-3.3.tar.gz"
    rm -f ${_D6_CORE_DIR}/sites/all/*.txt
    cd ${_CORE}
  fi
}

#
# Prepare D7 core.
_prepare_drupal7_core() {
  if [ ! -e "${_D7_CORE_DIR}" ]; then
    if [ -L "${_D7_CORE_DIR}" ]; then
      unlink ${_D7_CORE_DIR}
    fi
    cd /data/all/000/core
    _get_core_ext "${_DRUPAL7}.tar.gz"
    find ${_D7_CORE_DIR} -type d -exec chmod 0755 {} \; &> /dev/null
    find ${_D7_CORE_DIR} -type f -exec chmod 0644 {} \; &> /dev/null
    cd ${_D7_CORE_DIR}/
    _fix_dirs_files
    _rename_drupal7_profiles
    patch -p0 < ${_pthPch}/taxonomy-7.12.patch &> /dev/null
    rm -f ${_D7_CORE_DIR}/modules/taxonomy/taxonomy.module.orig
    rm -f modules/o_contrib_seven
    ln -s ${_CORE}/o_contrib_seven modules/o_contrib_seven
    ln -s ${_CORE}/o_contrib_seven/js/js.php js.php
    rm -rf ${_D7_CORE_DIR}/scripts
    cd ${_D7_CORE_DIR}/themes
    _get_dev_contrib "rubik-7.x-4.4.tar.gz"
    _get_dev_contrib "tao-7.x-3.1.tar.gz"
    cd ${_CORE}
  fi
}

#
# Remove D6 core from distro directory.
_nocore_d6_dist_clean() {
  rm -f ${_SHRD_PLPATH}/.gitignore
  rm -f ${_SHRD_PLPATH}/.htaccess
  rm -f ${_SHRD_PLPATH}/*.php
  rm -f ${_SHRD_PLPATH}/*.txt
  rm -f ${_SHRD_PLPATH}/*.xml
  rm -rf ${_SHRD_PLPATH}/cache
  rm -rf ${_SHRD_PLPATH}/includes
  rm -rf ${_SHRD_PLPATH}/misc
  rm -rf ${_SHRD_PLPATH}/modules
  rm -rf ${_SHRD_PLPATH}/sites
  rm -rf ${_SHRD_PLPATH}/scripts
  rm -rf ${_SHRD_PLPATH}/themes
  if [ ! -d "${_SHRD_PLPATH}/profiles" ] && [ -d "${_D6_CORE_DIR}/profiles" ]; then
    rm -rf ${_SHRD_PLPATH}/profiles
    cp -af ${_D6_CORE_DIR}/profiles ${_SHRD_PLPATH}/
  fi
  sed -i "s/'dblog'/'robotstxt', 'path_alias_cache'/g" \
    ${_SHRD_PRPATH}/${_REAL_PRNAME}.profile &> /dev/null
}

#
# Remove D7 core from distro directory.
_nocore_d7_dist_clean() {
  if [ "${_USE_DISTRO_CORE}" = "NO" ]; then
    rm -f ${_SHRD_PLPATH}/.gitignore
    rm -f ${_SHRD_PLPATH}/.htaccess
    rm -f ${_SHRD_PLPATH}/*.php
    rm -f ${_SHRD_PLPATH}/*.txt
    rm -f ${_SHRD_PLPATH}/*.xml
    rm -f ${_SHRD_PLPATH}/web.config
    rm -rf ${_SHRD_PLPATH}/cache
    rm -rf ${_SHRD_PLPATH}/includes
    rm -rf ${_SHRD_PLPATH}/misc
    rm -rf ${_SHRD_PLPATH}/modules
    rm -rf ${_SHRD_PLPATH}/sites
    rm -rf ${_SHRD_PLPATH}/scripts
    rm -rf ${_SHRD_PLPATH}/themes
    _REVISIONS="34 35 36 37 38 39"
    for i in ${_REVISIONS}; do
      if [ -d "${_CORE}/drupal-7.$i" ] && [ ! -e "${_SHRD_PLPATH}" ]; then
        mv ${_CORE}/drupal-7.$i ${_SHRD_PLPATH}
      fi
    done
    if [ ! -d "${_SHRD_PLPATH}/profiles" ] && [ -d "${_D7_CORE_DIR}/profiles" ]; then
      rm -rf ${_SHRD_PLPATH}/profiles
      cp -af ${_D7_CORE_DIR}/profiles ${_SHRD_PLPATH}/
    fi
  fi
}

#
# Enable D6 admin.
_enable_drupal6_admin() {
  sed -i "s/'path_alias_cache'/'path_alias_cache', 'admin'/g" \
    ${_SHRD_PRPATH}/${_REAL_PRNAME}.profile &> /dev/null
}

#
# Remove default core seven profiles.
_remove_default_core_seven_profiles() {
  rm -rf ${_SHRD_PLPATH}/profiles/minimal
  rm -rf ${_SHRD_PLPATH}/profiles/standard
  rm -rf ${_SHRD_PLPATH}/profiles/testing
}

#
# Init this distro root.
_init_this_distro_root() {
  mkdir -p ${_OCTO_PLPATH}
  cd ${_OCTO_PLPATH}
  if [[ "${_USE_DISTRO_CORE}" = "YES" ]]; then
    _create_distro_d7_symlinks
  else
    if [[ "${_SHRD_PLNAME}" =~ "-${_SMALLCORE6_V}" ]]; then
      _create_d6_symlinks
    elif [[ "${_SHRD_PLNAME}" =~ "-${_SMALLCORE7_V}" ]]; then
      _create_d7_symlinks
    fi
  fi
}

#
# Upgrade contrib less.
_upgrade_contrib_less() {
  if [ -e "${_SHRD_PRPATH}/modules/contrib/rules_conditional" ]; then
    rm -rf ${_SHRD_PRPATH}/modules/contrib/rules_conditional
    cd ${_SHRD_PRPATH}/modules/contrib
    _get_dev_contrib "rules_conditional-7.x-1.x-dev.tar.gz"
    if [ ! -e "${_SHRD_PRPATH}/modules/contrib/rules_conditional" ]; then
      _get_dev_contrib "rules_conditional-7.x-1.x-dev.tar.gz"
    fi
    cd ${_CORE}
  fi
  if [ -e "${_SHRD_PRPATH}/modules/contrib/webform" ]; then
    rm -rf ${_SHRD_PRPATH}/modules/contrib/webform
    cd ${_SHRD_PRPATH}/modules/contrib
    _get_dev_contrib "webform-7.x-4.18.tar.gz"
    if [ ! -e "${_SHRD_PRPATH}/modules/contrib/webform" ]; then
      _get_dev_contrib "webform-7.x-4.18.tar.gz"
    fi
    cd ${_CORE}
  fi
  if [ -e "${_SHRD_PRPATH}/modules/contrib/panels" ]; then
    rm -rf ${_SHRD_PRPATH}/modules/contrib/panels
    cd ${_SHRD_PRPATH}/modules/contrib
    _get_dev_contrib "panels-7.x-3.8.tar.gz"
    if [ ! -e "${_SHRD_PRPATH}/modules/contrib/panels" ]; then
      _get_dev_contrib "panels-7.x-3.8.tar.gz"
    fi
    cd ${_CORE}
  fi
  if [ -e "${_SHRD_PRPATH}/modules/contrib/rules" ]; then
    rm -rf ${_SHRD_PRPATH}/modules/contrib/rules
    cd ${_SHRD_PRPATH}/modules/contrib
    _get_dev_contrib "rules-7.x-2.12.tar.gz"
    if [ ! -e "${_SHRD_PRPATH}/modules/contrib/rules" ]; then
      _get_dev_contrib "rules-7.x-2.12.tar.gz"
    fi
    cd ${_CORE}
  fi
  if [ -e "${_SHRD_PRPATH}/modules/rules" ]; then
    rm -rf ${_SHRD_PRPATH}/modules/rules
    cd ${_SHRD_PRPATH}/modules
    _get_dev_contrib "rules-7.x-2.12.tar.gz"
    if [ ! -e "${_SHRD_PRPATH}/modules/rules" ]; then
      _get_dev_contrib "rules-7.x-2.12.tar.gz"
    fi
    cd ${_CORE}
  fi
}

# Create Drupal basic platform for versions 6 and 7.
_create_drupal6_or_7_basic() {
  local version="$1"  # Accepts "6" or "7"
  if [ ! -d "${_SHRD_PLPATH}" ]; then
    mkdir -p "${_SHRD_PLPATH}"
    local core_dir_var="_D${version}_CORE_DIR"
    local core_dir="${!core_dir_var}"
    if [ ! -e "${core_dir}" ]; then
      local prepare_func="_prepare_drupal${version}_core"
      if declare -f "$prepare_func" > /dev/null; then
        "$prepare_func"
      else
        echo "Function $prepare_func does not exist."
      fi
    fi
    if [ "$version" = "6" ]; then
      cd "${_CORE}"
      _nocore_d6_dist_clean
      _enable_drupal6_admin
    elif [ "$version" = "7" ]; then
      _nocore_d7_dist_clean
    fi
  fi
  _init_this_distro_root
}

# Create Drupal basic platform for versions 9 and 10.x.
_create_drupal_basic_version() {
  local version="$1"  # Accepts "9", "10_0", "10_1", etc.
  if [ ! -d "${_OCTO_PLPATH}" ]; then
    cd "${_pthDst}"
    local drupal_var="_DRUPAL${version}"
    local drupal_version="${!drupal_var}"
    _get_core_ext "${drupal_version}.tar.gz"
    mv -f "${drupal_version}" "${_SHRD_PLNAME}"
    if [ "$version" = "9" ]; then
      cd "${_SHRD_PLNAME}"
      _rename_drupal9_profiles
    fi
  fi
}

# Create Drupal core-only basic platform.
_create_drupal_core_basic() {
  local version_code="$1"
  case "$version_code" in
    "DL6")
      _create_drupal6_or_7_basic "6"
      ;;
    "DL7")
      _create_drupal6_or_7_basic "7"
      ;;
    "DL9")
      _create_drupal_basic_version "9"
      ;;
    "DX0")
      _create_drupal_basic_version "10_0"
      ;;
    "DX1")
      _create_drupal_basic_version "10_1"
      ;;
    "DX2")
      _create_drupal_basic_version "10_2"
      ;;
    "DX3")
      _create_drupal_basic_version "10_3"
      ;;
    "DX4")
      _create_drupal_basic_version "10_4"
      ;;
    *)
      echo "Unsupported version code: $version_code"
      ;;
  esac
}

# Define distros names and their key-words for configuration
declare -A _distros_names=(
  ["CK1"]="Commerce Kickstart v.1"
  ["CK2"]="Commerce Base v.2"
  ["CK3"]="Commerce Kickstart v.3"
  ["DXP"]="DXPR Marketing"
  ["EZC"]="EzContent"
  ["FOS"]="farmOS"
  ["LGV"]="LocalGov"
  ["OCS"]="OpenCulturas"
  ["OFD"]="OpenFed"
  ["OLS"]="OpenLucius"
  ["OPG"]="Opigno LMS"
  ["SCR"]="Sector"
  ["SOC"]="Social"
  ["THR"]="Thunder"
  ["UC6"]="Ubercart D6"
  ["UC7"]="Ubercart D7"
  ["VB9"]="Varbase 9"
  ["VBX"]="Varbase 10"
  ["DL6"]="Drupal 6"
  ["DL7"]="Drupal 7"
  ["DL9"]="Drupal 9"
  ["DX0"]="Drupal X0"
  ["DX1"]="Drupal X1"
  ["DX2"]="Drupal X2"
  ["DX3"]="Drupal X3"
  ["DX4"]="Drupal X4"
)

# Define distros names and their URLs for information
declare -A _distros_urls=(
  ["CK1"]="${_urlPrt}/commerce_kickstart"
  ["CK2"]="${_urlPrt}/commerce"
  ["CK3"]="${_urlPrt}/commerce_kickstart"
  ["DXP"]="DXPR Marketing"
  ["EZC"]="EzContent"
  ["FOS"]="farmOS"
  ["LGV"]="LocalGov"
  ["OCS"]="OpenCulturas"
  ["OFD"]="OpenFed"
  ["OLS"]="${_urlPrt}/openlucius"
  ["OPG"]="${_urlPrt}/opigno_lms"
  ["SCR"]="Sector"
  ["SOC"]="Social"
  ["THR"]="${_urlPrt}/thunder"
  ["UC6"]="${_urlPrt}/ubercart"
  ["UC7"]="${_urlPrt}/ubercart"
  ["VB9"]="${_urlPrt}/varbase"
  ["VBX"]="${_urlPrt}/varbase"
  ["DL6"]="${_urlPrt}/drupal/releases/${_SMALLCORE6_V}"
  ["DL7"]="${_urlPrt}/drupal/releases/${_SMALLCORE7_V}"
  ["DL9"]="${_urlPrt}/drupal/releases/${_SMALLCORE9_V}"
  ["DX0"]="${_urlPrt}/drupal/releases/${_SMALLCORE10_0_V}"
  ["DX1"]="${_urlPrt}/drupal/releases/${_SMALLCORE10_1_V}"
  ["DX2"]="${_urlPrt}/drupal/releases/${_SMALLCORE10_2_V}"
  ["DX3"]="${_urlPrt}/drupal/releases/${_SMALLCORE10_3_V}"
  ["DX4"]="${_urlPrt}/drupal/releases/${_SMALLCORE10_4_V}"
)

# Define distros versions for configuration
declare -A _distros_versions=(
  ["CK1"]="2.77"
  ["CK2"]="2.40"
  ["CK3"]="3.0.0"
  ["DXP"]="10.3.0"
  ["EZC"]="2.2.15"
  ["FOS"]="3.3.1"
  ["LGV"]="3.0.11"
  ["OCS"]="2.2.1"
  ["OFD"]="12.2.4"
  ["OLS"]="2.0.0"
  ["OPG"]="3.1.0"
  ["SCR"]="10.0.0-rc5"
  ["SOC"]="12.4.5"
  ["THR"]="7.3.7"
  ["UC6"]="2.15"
  ["UC7"]="3.13"
  ["VB9"]="9.1.6"
  ["VBX"]="10.0.2"
  ["DL6"]="${_SMALLCORE6_V}"
  ["DL7"]="${_SMALLCORE7_V}"
  ["DL9"]="${_SMALLCORE9_V}"
  ["DX0"]="${_SMALLCORE10_0_V}"
  ["DX1"]="${_SMALLCORE10_1_V}"
  ["DX2"]="${_SMALLCORE10_2_V}"
  ["DX3"]="${_SMALLCORE10_3_V}"
  ["DX4"]="${_SMALLCORE10_4_V}"
)

# Define distros Drupal cores versions for configuration
declare -A _distros_drupal_cores=(
  ["CK1"]="${_SMALLCORE7_V}"
  ["CK2"]="${_SMALLCORE10_1_V}"
  ["CK3"]="${_SMALLCORE10_3_V}"
  ["DXP"]="${_SMALLCORE10_3_V}"
  ["EZC"]="${_SMALLCORE10_3_V}"
  ["FOS"]="${_SMALLCORE10_3_V}"
  ["LGV"]="${_SMALLCORE10_3_V}"
  ["OCS"]="${_SMALLCORE10_3_V}"
  ["OFD"]="${_SMALLCORE10_2_V}"
  ["OLS"]="${_SMALLCORE9_V}"
  ["OPG"]="${_SMALLCORE9_V}"
  ["SCR"]="${_SMALLCORE10_2_V}"
  ["SOC"]="${_SMALLCORE10_2_V}"
  ["THR"]="${_SMALLCORE10_3_V}"
  ["UC6"]="${_SMALLCORE6_V}"
  ["UC7"]="${_SMALLCORE7_V}"
  ["VB9"]="${_SMALLCORE10_3_V}"
  ["VBX"]="${_SMALLCORE10_3_V}"
  ["DL6"]="${_SMALLCORE6_V}"
  ["DL7"]="${_SMALLCORE7_V}"
  ["DL9"]="${_SMALLCORE9_V}"
  ["DX0"]="${_SMALLCORE10_0_V}"
  ["DX1"]="${_SMALLCORE10_1_V}"
  ["DX2"]="${_SMALLCORE10_2_V}"
  ["DX3"]="${_SMALLCORE10_3_V}"
  ["DX4"]="${_SMALLCORE10_4_V}"
)

# Define distros profiles names for configuration
declare -A _distros_profiles_names=(
  ["CK1"]="commerce_kickstart"
  ["CK2"]="commerce_base"
  ["CK3"]="commerce_kickstart"
  ["DXP"]="dxpr_marketing_cms"
  ["EZC"]="ezcontent"
  ["FOS"]="farm"
  ["LGV"]="localgov"
  ["OCS"]="openculturas"
  ["OFD"]="openfed"
  ["OLS"]="openlucius"
  ["OPG"]="opigno_lms"
  ["SCR"]="sector"
  ["SOC"]="social"
  ["THR"]="thunder"
  ["UC6"]="uberdrupal"
  ["UC7"]="minimal"
  ["VB9"]="varbase"
  ["VBX"]="varbase"
  ["DL6"]="default"
  ["DL7"]="standard"
  ["DL9"]="standard"
  ["DX0"]="standard"
  ["DX1"]="standard"
  ["DX2"]="standard"
  ["DX3"]="standard"
  ["DX4"]="standard"
)

# Define distros profiles paths for configuration
declare -A _distros_profiles_paths=(
  ["CK1"]="/"
  ["CK2"]="contrib/"
  ["CK3"]="contrib/"
  ["DXP"]="contrib/"
  ["EZC"]="contrib/"
  ["FOS"]="/"
  ["LGV"]="contrib/"
  ["OCS"]="contrib/"
  ["OFD"]="contrib/"
  ["OLS"]="contrib/"
  ["OPG"]="contrib/"
  ["SCR"]="contrib/"
  ["SOC"]="contrib/"
  ["THR"]="contrib/"
  ["UC6"]="/"
  ["UC7"]="/"
  ["VB9"]="/"
  ["VBX"]="contrib/"
  ["DL6"]="/"
  ["DL7"]="/"
  ["DL9"]="/"
  ["DX0"]="/"
  ["DX1"]="/"
  ["DX2"]="/"
  ["DX3"]="/"
  ["DX4"]="/"
)

# Define distros web dirs for configuration
declare -A _distros_web_dirs=(
  ["CK1"]=""
  ["CK2"]="/web"
  ["CK3"]="/web"
  ["DXP"]="/web"
  ["EZC"]="/web"
  ["FOS"]="/web"
  ["LGV"]="/web"
  ["OCS"]="/web"
  ["OFD"]="/docroot"
  ["OLS"]="/web"
  ["OPG"]="/web"
  ["SCR"]="/web"
  ["SOC"]="/html"
  ["THR"]="/docroot"
  ["UC6"]=""
  ["UC7"]=""
  ["VB9"]="/docroot"
  ["VBX"]="/docroot"
  ["DL6"]=""
  ["DL7"]=""
  ["DL9"]="/web"
  ["DX0"]="/web"
  ["DX1"]="/web"
  ["DX2"]="/web"
  ["DX3"]="/web"
  ["DX4"]="/web"
)

# Define distros names and their compatible max PHP versions for information
declare -A _distros_php_versions=(
  ["CK1"]="7.4"
  ["CK2"]="8.3"
  ["CK3"]="8.3"
  ["DXP"]="8.3"
  ["EZC"]="8.3"
  ["FOS"]="8.3"
  ["LGV"]="8.3"
  ["OCS"]="8.3"
  ["OFD"]="8.3"
  ["OLS"]="8.3"
  ["OPG"]="8.3"
  ["SCR"]="8.3"
  ["SOC"]="8.3"
  ["THR"]="8.3"
  ["UC6"]="7.4"
  ["UC7"]="7.4"
  ["VB9"]="8.3"
  ["VBX"]="8.3"
  ["DL6"]="7.4"
  ["DL7"]="8.3"
  ["DL9"]="8.3"
  ["DX0"]="8.3"
  ["DX1"]="8.3"
  ["DX2"]="8.3"
  ["DX3"]="8.3"
  ["DX4"]="8.3"
)


_commerce_7_2_install() {
###---### Commerce 7.x-2.x
#
  _REAL_PRNAME="commerce_kickstart"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_COMMERCE2}-${_SMALLCORE7_V}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "CK1" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if _prompt_yes_no "${_F_COMMERCE2} - ${1}" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_COMMERCE2} ${_yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_USE_AEGIR_VER}" = "SRC" ] \
              && [ "${_T_BUILD}" = "SRC" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                _prepare_drupal7_core
              fi
              _get_distro_ext "${_SHRD_PLNAME}.tar.gz"
              _nocore_d7_dist_clean
              _remove_default_core_seven_profiles
              _upgrade_contrib_less
            else
              _get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          _init_this_distro_root
          _msg "DISTRO: ${_F_COMMERCE2} installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_COMMERCE2} ${_noT}"
        fi
      fi
    fi
  fi
}


_ubercart6_install() {
###---### Ubercart 2
#
  _REAL_PRNAME="uberdrupal"
  _VIRT_PRNAME="ubercart"
  _SHRD_PLNAME="${_VIRT_PRNAME}-${_UBERCART6}-${_SMALLCORE6_V}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "UCT" ]]; then
    if [ ! -d "${_OCTO_PLPATH}/modules/path_alias_cache" ]; then
      if _prompt_yes_no "${_F_UBERCART6} - ${1}" ; then
        true
        [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_UBERCART6} ${_yOk}"
        if [ ! -d "${_SHRD_PLPATH}" ]; then
          if [ "${_USE_AEGIR_VER}" = "SRC" ] \
            && [ "${_T_BUILD}" = "SRC" ]; then
            cd ${_CORE}
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              _prepare_drupal6_core
            fi
            mkdir -p ${_SHRD_PLPATH}
            _nocore_d6_dist_clean
            rm -rf ${_SHRD_PLPATH}/profiles/default
            cd ${_SHRD_PLPATH}/profiles
            _get_dev_contrib "uberdrupal.tar.gz"
            cd ${_CORE}
            mkdir -p ${_SHRD_PRPATH}/{modules,themes,libraries}
            cd ${_SHRD_PRPATH}/libraries
            _get_dev_contrib "colorbox-1.3.18.zip"
            cd ${_SHRD_PRPATH}/modules
            _get_dev_contrib "admin_menu-6.x-3.x-dev.tar.gz"
            _get_dev_contrib "cck-6.x-3.0-alpha4.tar.gz"
            _get_dev_contrib "colorbox-6.x-1.4.tar.gz"
            _get_dev_contrib "date-6.x-2.9.tar.gz"
            _get_dev_contrib "filefield-6.x-3.14.tar.gz"
            _get_dev_contrib "google_analytics-6.x-4.3.tar.gz"
            _get_dev_contrib "imageapi-6.x-1.10.tar.gz"
            _get_dev_contrib "imagecache-6.x-2.x-dev.tar.gz"
            _get_dev_contrib "imagefield-6.x-3.11.tar.gz"
            _get_dev_contrib "jquery_update-6.x-2.0-alpha1.tar.gz"
            _get_dev_contrib "libraries-6.x-1.0.tar.gz"
            _get_dev_contrib "lightbox2-6.x-1.x-dev.tar.gz"
            _get_dev_contrib "rules-6.x-1.5.tar.gz"
            _get_dev_contrib "skinr-6.x-1.7.tar.gz"
            _get_dev_contrib "token-6.x-1.19.tar.gz"
            _get_dev_contrib "ubercart-6.x-${_UBERCART6}.tar.gz"
            _get_dev_contrib "views-6.x-3.3.tar.gz"
            _get_dev_contrib "webform-6.x-3.23.tar.gz"
            ### https://drupal.org/node/1167276#comment-5138248
            cd ${_SHRD_PRPATH}/modules/${_VIRT_PRNAME}
            patch -p1 < ${_pthPch}/${_VIRT_PRNAME}-1167276-reroll.patch &> /dev/null
            cd ${_SHRD_PRPATH}/modules/imagecache
            # https://drupal.org/node/1243258#comment-4850634
            patch -p1 < ${_pthPch}/imagecache-1243258-5.patch &> /dev/null
            cd ${_SHRD_PRPATH}/themes
            _get_dev_contrib "fusion-6.x-1.x-dev.tar.gz"
            _get_dev_contrib "acquia_prosper-6.x-1.1.tar.gz"
          else
            cd ${_CORE}
            _get_distro_ext "${_SHRD_PLNAME}.tar.gz"
          fi
        fi
        _init_this_distro_root
        _msg "DISTRO: ${_F_UBERCART6} installed"
        _RUN_VERIFY=YES
      else
        [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_UBERCART6} ${_noT}"
      fi
    fi
  fi
}


_ubercart7_install() {
###---### Ubercart 3
#
  _REAL_PRNAME="minimal"
  _VIRT_PRNAME="ubercart"
  _SHRD_PLNAME="${_VIRT_PRNAME}-${_UBERCART7}-${_SMALLCORE7_V}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "UC7" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if _prompt_yes_no "${_F_UBERCART7} - ${1}" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_UBERCART7} ${_yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_USE_AEGIR_VER}" = "SRC" ] \
              && [ "${_T_BUILD}" = "SRC" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                _prepare_drupal7_core
              fi
              mkdir -p ${_SHRD_PLPATH}
              _nocore_d7_dist_clean
              rm -rf ${_SHRD_PLPATH}/profiles/standard
              rm -rf ${_SHRD_PLPATH}/profiles/testing
              sed -i "s/version = VERSION/version = \"${_SMALLCORE7_V}\"/g" \
                ${_SHRD_PLPATH}/profiles/minimal/minimal.info &> /dev/null
              mkdir -p ${_SHRD_PRPATH}/libraries
              cd ${_SHRD_PRPATH}/libraries
              _get_dev_contrib "colorbox-1.5.13.zip"
              if [ -d "colorbox-master" ]; then
                mv -f colorbox-master colorbox
              fi
              mkdir -p ${_SHRD_PRPATH}/modules
              cd ${_SHRD_PRPATH}/modules
              _get_dev_contrib "colorbox-7.x-2.13.tar.gz"
              _get_dev_contrib "ctools-7.x-1.21.tar.gz"
              _get_dev_contrib "entity-7.x-1.11.tar.gz"
              _get_dev_contrib "google_analytics-7.x-2.6.tar.gz"
              _get_dev_contrib "libraries-7.x-2.5.tar.gz"
              _get_dev_contrib "pathauto-7.x-1.3.tar.gz"
              _get_dev_contrib "rules-7.x-2.12.tar.gz"
              _get_dev_contrib "token-7.x-1.7.tar.gz"
              _get_dev_contrib "ubercart-7.x-${_UBERCART7}.tar.gz"
              _get_dev_contrib "views-7.x-3.29.tar.gz"
              cd ${_SHRD_PRPATH}/modules/views
              # https://drupal.org/node/1766338#comment-6445882
              patch -p1 < \
                ${_pthPch}/views-revert-broken-filter-or-groups-1766338-7.patch &> /dev/null
              # https://drupal.org/node/2037469
              patch -p1 < \
                ${_pthPch}/views-exposed-sorts-2037469-1.patch &> /dev/null
            else
              _get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          _init_this_distro_root
          _msg "DISTRO: ${_F_UBERCART7} installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${_F_UBERCART7} ${_noT}"
        fi
      fi
    fi
  fi
}


_d_dist_custom_platform_install() {
###---### Template function for distros-custom-type platforms
#
  if [[ "${1}" == "CK1" ]]; then
    _commerce_7_2_install "${2}"
  elif [[ "${1}" == "UC6" ]]; then
    _ubercart6_install "${2}"
  elif [[ "${1}" == "UC7" ]]; then
    _ubercart7_install "${2}"
  fi
}


_d_dist_platform_install() {
###---### Template function for distros-type platforms
#
  local _REAL_PRNAME="${6}"
  local _DIST_PLNAME="${_REAL_PRNAME}-${2}-${3}"
  local _DIST_PLPATH="${_CORE}/${_DIST_PLNAME}"
  local _DIST_PRPATH="${_DIST_PLPATH}/profiles/${5}${6}"
  local _OCTO_PLPATH="${_pthDst}/${_DIST_PLNAME}${7}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ ${1} ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if _prompt_yes_no "${4} - ${9}" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4} ${_yOk}"
          if [ ! -d "${_OCTO_PLPATH}" ]; then
            cd ${_pthDst}
            _get_distro_ext "${_DIST_PLNAME}.tar.gz"
          fi
          if [ -d "${_OCTO_PLPATH}" ]; then
            _msg "DISTRO: ${4} installed"
            _RUN_VERIFY=YES
          fi
        else
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4} ${_noT}"
        fi
      fi
    fi
  fi
}


_d_core_platform_install() {
###---### Template function for core-only-type platforms
#
  local _REAL_PRNAME="${6}"
  if [ "${1}" = "DX4" ]; then
    _CORE_DEV="${_DRUPAL10_4_D}"
    _CORE_STG="${_DRUPAL10_4_S}"
    _CORE_PRD="${_DRUPAL10_4_P}"
  elif [ "${1}" = "DX3" ]; then
    _CORE_DEV="${_DRUPAL10_3_D}"
    _CORE_STG="${_DRUPAL10_3_S}"
    _CORE_PRD="${_DRUPAL10_3_P}"
  elif [ "${1}" = "DX2" ]; then
    _CORE_DEV="${_DRUPAL10_2_D}"
    _CORE_STG="${_DRUPAL10_2_S}"
    _CORE_PRD="${_DRUPAL10_2_P}"
  elif [ "${1}" = "DX1" ]; then
    _CORE_DEV="${_DRUPAL10_1_D}"
    _CORE_STG="${_DRUPAL10_1_S}"
    _CORE_PRD="${_DRUPAL10_1_P}"
  elif [ "${1}" = "DX0" ]; then
    _CORE_DEV="${_DRUPAL10_0_D}"
    _CORE_STG="${_DRUPAL10_0_S}"
    _CORE_PRD="${_DRUPAL10_0_P}"
  elif [ "${1}" = "DL9" ]; then
    _CORE_DEV="${_DRUPAL9_D}"
    _CORE_STG="${_DRUPAL9_S}"
    _CORE_PRD="${_DRUPAL9_P}"
  elif [ "${1}" = "DL7" ]; then
    _CORE_DEV="${_DRUPAL7_D}"
    _CORE_STG="${_DRUPAL7_S}"
    _CORE_PRD="${_DRUPAL7_P}"
  elif [ "${1}" = "DL6" ]; then
    _CORE_DEV="${_DRUPAL6_D}"
    _CORE_STG="${_DRUPAL6_S}"
    _CORE_PRD="${_DRUPAL6_P}"
  fi

  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "${1}" ]]; then
    if [ ! -d "${_pthDst}/${_CORE_DEV}" ]; then
      if _prompt_yes_no "${4} - ${9}" ; then
        true
        ###---### Drupal Core-Only Development
        #
        _SHRD_PLNAME="${_CORE_DEV}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "${1}" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4}.D ${_yOk}"
          _create_drupal_core_basic "${1}"
          if [ -d "${_OCTO_PLPATH}" ]; then
            _msg "DISTRO: ${4}.D installed"
            _RUN_VERIFY=YES
            _save_verify_this_platform "${1}" "${2}" "${3}" "${_SHRD_PLNAME}" "${5}" "${6}" "${7}"
          fi
        fi
        ###---### Drupal Core-Only Staging
        #
        _SHRD_PLNAME="${_CORE_STG}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "${1}" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4}.S ${_yOk}"
          _create_drupal_core_basic "${1}"
          if [ -d "${_OCTO_PLPATH}" ]; then
            _msg "DISTRO: ${4}.S installed"
            _RUN_VERIFY=YES
            _save_verify_this_platform "${1}" "${2}" "${3}" "${_SHRD_PLNAME}" "${5}" "${6}" "${7}"
          fi
        fi
        ###---### Drupal Core-Only Production
        #
        _SHRD_PLNAME="${_CORE_PRD}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        [[ "${1}" =~ DL7 || "${1}" =~ DL6 ]] && _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_pthDst}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "${1}" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4}.P ${_yOk}"
          _create_drupal_core_basic "${1}"
          if [ -d "${_OCTO_PLPATH}" ]; then
            _msg "DISTRO: ${4}.P installed"
            _RUN_VERIFY=YES
            _save_verify_this_platform "${1}" "${2}" "${3}" "${_SHRD_PLNAME}" "${5}" "${6}" "${7}"
          fi
        fi
      else
        [ "${_DEBUG_MODE}" = "YES" ] && _msg "DISTRO: ${4} ${_noT}"
      fi
    fi
  fi
}


###
###---### Action starts here.
###


###---### Prepare D6 and D7 shared core
#
_prepare_drupal6_core
_prepare_drupal7_core


# Prepare
_prepare_for_save_verify_platforms


# Loop through the _distros_names
for _dist in "${!_distros_names[@]}"; do
  local _d_name="${_distros_names[${_dist}]}"
  local _d_vers="${_distros_versions[${_dist}]}"
  local _d_core="${_distros_drupal_cores[${_dist}]}"
  local _d_desc="${_d_name} ${_d_vers} ${_d_core} [${_THIS_CORE}]"
  local _d_ppth="${_distros_profiles_paths[${_dist}]}"
  local _d_prfn="${_distros_profiles_names[${_dist}]}"
  local _d_webd="${_distros_web_dirs[${_dist}]}"
  local _d_phpv="${_distros_php_versions[${_dist}]}"
  local _d_xurl="${_distros_urls[${_dist}]}"
  if [[ "${_dist}" =~ DL || "${_dist}" =~ DX ]]; then
    _d_core_platform_install "${_dist}" "${_d_vers}" "${_d_core}" "${_d_desc}" "${_d_ppth}" "${_d_prfn}" "${_d_webd}" "${_d_phpv}" "${_d_xurl}"
  elif [[ "${_dist}" =~ CK1 || "${_dist}" =~ UC ]]; then
    _d_dist_custom_platform_install "${_dist}" "${_d_xurl}"
    _save_verify_this_platform "${_dist}" "${_d_vers}" "${_d_core}" "${_d_desc}" "${_d_ppth}" "${_d_prfn}" "${_d_webd}"
  else
    _d_dist_platform_install "${_dist}" "${_d_vers}" "${_d_core}" "${_d_desc}" "${_d_ppth}" "${_d_prfn}" "${_d_webd}" "${_d_phpv}" "${_d_xurl}"
    _save_verify_this_platform "${_dist}" "${_d_vers}" "${_d_core}" "${_d_desc}" "${_d_ppth}" "${_d_prfn}" "${_d_webd}"
  fi
done


###---### Remove some unused core files.
#
if [ "${_DEBUG_MODE}" = "YES" ]; then
  echo " "
  _msg "${_STATUS} C: Removing some unused core files..."
fi
if [[ "${_CORE}" =~ "/data/all/" ]]; then
  rm -rf ${_CORE}/*/scripts
  rm -f ${_CORE}/*{.make,.tar,.tar.gz,.zip}
fi
cd ${_CORE}


###---### Check platforms status.
#
if [ "${_RUN_VERIFY}" = "YES" ]; then
  _msg "${_STATUS} C: Running Platforms Verify tasks, please wait..."
  _complete_save_verify_platforms
  touch /opt/tmp/status-AegirSetupC-runVerify
else
  if [ "${_DEBUG_MODE}" = "YES" ]; then
    _msg "${_STATUS} C: No new Platforms installed this time"
  fi
fi

touch /opt/tmp/status-AegirSetupC-OK

###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2024 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###
