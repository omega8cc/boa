#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2016 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: https://github.com/omega8cc/boa
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###


###
### Helper variables
###
bldPth="/opt/tmp/boa"
crlGet="-L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab"
filIncO="octopus.sh.cnf"
gCb="git clone --branch"
gitHub="https://github.com/omega8cc"
gitLab="https://gitlab.com/omega8cc"
libFnc="${bldPth}/lib/functions"
tocIncO="${filIncO}.$1"
vBs="/var/backups"
vSet="vset --always-set"


###
### Panic on missing include
###
panic_exit() {
  echo
  echo " EXIT: Required lib file not available?"
  echo " EXIT: $1"
  echo " EXIT: Cannot continue"
  echo " EXIT: Bye (0)"
  echo
  touch /opt/tmp/status-AegirSetupC-FAIL
  exit 1
}


###
### Include helper functions
###
if [ -e "${vBs}/${tocIncO}" ]; then
  source "${vBs}/${tocIncO}"
  tInc="${vBs}/${tocIncO}"
elif [ -e "${vBs}/${filIncO}" ]; then
  source "${vBs}/${filIncO}"
  tInc="${vBs}/${filIncO}"
else
  panic_exit "${tInc}"
fi


###
### Env debugging
###
if [ "${_DEBUG_MODE}" = "YES" ]; then
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
  echo Effective _USER is $1
  [ -r "${vBs}/${tocIncO}" ] && echo Effective tocIncO is ${tocIncO}
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
  env
  echo DEBUG AegirSetupC
  echo DEBUG AegirSetupC
fi


###
### More helper variables
###
urlDev="http://${_USE_MIR}/dev"
urlHmr="http://${_USE_MIR}/versions/master/aegir"


###
### Include shared functions
###
_FL="helper satellite"
for f in ${_FL}; do
  [ -r "${libFnc}/${f}.sh.inc" ] || panic_exit "${f}"
  source "${libFnc}/${f}.sh.inc"
done


###
### Local variables
###
if [ "${_THIS_DB_HOST}" = "FQDN" ]; then
  _THIS_DB_HOST=$(uname -n 2>&1)
fi
_DIST_INSTALL=NO
_STATUS=INIT
_USE_DISTRO_CORE=NO
_LOCAL_STATUS="${_STATUS}"
_ROOT="/data/disk/${_USER}"
_HM_ROOT="${_ROOT}/aegir/distro/${_HM_DISTRO}"
_DISTRO_ROOT="${_ROOT}/distro/${_DISTRO}"
_PREV_HM_ROOT="${_ROOT}/aegir/distro/${_LAST_HMR}"
_D="/data/all"
_SRCDIR="/opt/tmp/files"
_LOG="/var/backups/octopus-${_USER}-${_NOW}.log"
if [ "${_PHP_CLI_VERSION}" = "7.0" ] \
  && [ -x "/opt/php70/bin/php" ]; then
  _T_CLI=/opt/php70/bin
elif [ "${_PHP_CLI_VERSION}" = "5.6" ] \
  && [ -x "/opt/php56/bin/php" ]; then
  _T_CLI=/opt/php56/bin
elif [ "${_PHP_CLI_VERSION}" = "5.5" ] \
  && [ -x "/opt/php55/bin/php" ]; then
  _T_CLI=/opt/php55/bin
elif [ "${_PHP_CLI_VERSION}" = "5.4" ] \
  && [ -x "/opt/php54/bin/php" ]; then
  _T_CLI=/opt/php54/bin
elif [ "${_PHP_CLI_VERSION}" = "5.3" ] \
  && [ -x "/opt/php53/bin/php" ]; then
  _T_CLI=/opt/php53/bin
fi
if [ -e "/opt/tools/d7.ini" ] \
  && [ -e "/opt/tools/drush/7/drush/drush.php" ]; then
  _DRUSHCMD="${_T_CLI}/php /opt/tools/drush/7/drush/drush.php"
else
  _DRUSHCMD="${_T_CLI}/php ${_ROOT}/tools/drush/drush.php"
fi
#
if [ "${_PHP_FPM_VERSION}" = "7.0" ] \
  && [ "${_PHP_CLI_VERSION}" = "7.0" ]; then
  _D_8_ALLOW=YES
elif [ "${_PHP_FPM_VERSION}" = "5.6" ] \
  && [ "${_PHP_CLI_VERSION}" = "5.6" ]; then
  _D_8_ALLOW=YES
elif [ "${_PHP_FPM_VERSION}" = "5.5" ] \
  && [ "${_PHP_CLI_VERSION}" = "5.5" ]; then
  _D_8_ALLOW=YES
else
  _D_8_ALLOW=NO
fi
#
PATH=${_T_CLI}:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
SHELL=/bin/bash
#
pthPch="/opt/tmp/boa/aegir/patches"
urlDrp="http://ftp.drupal.org/files/projects"
urlPrt="https://drupal.org/project"
#
noT="not installed"
yOk="installation in progress..."


###---### Functions.
#
# Download and extract from distro.
get_distro_ext() {
  if [ ! -z "$1" ]; then
    curl ${crlGet} "http://${_USE_MIR}/distro/$1" -o "$1"
    extract_archive "$1"
  fi
}
#
# Create standard directories.
fix_dirs_files() {
  rm -f ./*.txt
  rm -f ./modules/*.txt
  rm -f ./themes/*.txt
  rm -rf ./modules/cookie_cache_bypass
  mkdir -p ./sites/default/files
  mkdir -p ./cache/{normal,perm}
  chmod -R 777 ./cache
  if [ -e "./sites/default/default.settings.php" ]; then
    cp -af ./sites/default/default.settings.php ./sites/default/settings.php
  fi
  chmod a+rw ./sites/default/settings.php
  chmod a+rwx ./sites/default/files
  mkdir -p ./profiles
  mkdir -p ./sites/all/{modules,libraries,themes}
  rm -f ./core/modules/*.txt
  rm -f ./core/themes/*.txt
  rm -f ./modules/*.txt
  rm -f ./themes/*.txt
  rm -f ./sites/all/*.txt
  echo empty > ./profiles/EMPTY.txt
  echo empty > ./sites/all/EMPTY.txt
  echo empty > ./sites/all/modules/EMPTY.txt
  echo empty > ./sites/all/libraries/EMPTY.txt
  echo empty > ./sites/all/themes/EMPTY.txt
  chmod 0755 ./profiles &> /dev/null
  chmod 0755 ./sites
  chmod 0755 ./sites/all
  chmod 02775 ./sites/all/{modules,libraries,themes}
  cp -af /opt/tmp/boa/aegir/conf/get.htaccess.txt ./.htaccess
  cp -af /opt/tmp/boa/aegir/conf/crossdomain.xml ./
}
#
# Create D6 symlinks.
create_d6_symlinks() {
  if [ ! -L "includes" ]; then
    ln -sf ${_D6_CORE_DIR}/.htaccess .htaccess
    ln -sf ${_D6_CORE_DIR}/boost_stats.php boost_stats.php
    ln -sf ${_D6_CORE_DIR}/cron.php cron.php
    ln -sf ${_D6_CORE_DIR}/crossdomain.xml crossdomain.xml
    ln -sf ${_D6_CORE_DIR}/includes includes
    ln -sf ${_D6_CORE_DIR}/index.php index.php
    ln -sf ${_D6_CORE_DIR}/install.php install.php
    ln -sf ${_D6_CORE_DIR}/js.php js.php
    ln -sf ${_D6_CORE_DIR}/misc misc
    ln -sf ${_D6_CORE_DIR}/modules modules
    ln -sf ${_D6_CORE_DIR}/themes themes
    ln -sf ${_D6_CORE_DIR}/update.php update.php
    ln -sf ${_D6_CORE_DIR}/xmlrpc.php xmlrpc.php
    cp -af ${_D6_CORE_DIR}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}
#
# Create D7 symlinks.
create_d7_symlinks() {
  if [ ! -L "web.config" ]; then
    ln -sf ${_D7_CORE_DIR}/.htaccess .htaccess
    ln -sf ${_D7_CORE_DIR}/authorize.php authorize.php
    ln -sf ${_D7_CORE_DIR}/cron.php cron.php
    ln -sf ${_D7_CORE_DIR}/crossdomain.xml crossdomain.xml
    ln -sf ${_D7_CORE_DIR}/includes includes
    ln -sf ${_D7_CORE_DIR}/index.php index.php
    ln -sf ${_D7_CORE_DIR}/install.php install.php
    ln -sf ${_D7_CORE_DIR}/js.php js.php
    ln -sf ${_D7_CORE_DIR}/misc misc
    ln -sf ${_D7_CORE_DIR}/modules modules
    ln -sf ${_D7_CORE_DIR}/themes themes
    ln -sf ${_D7_CORE_DIR}/update.php update.php
    ln -sf ${_D7_CORE_DIR}/web.config web.config
    ln -sf ${_D7_CORE_DIR}/xmlrpc.php xmlrpc.php
    cp -af ${_D7_CORE_DIR}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}
#
# Create distro own D7 core symlinks.
create_distro_d7_symlinks() {
  if [ ! -L "web.config" ]; then
    if [ ! -f "${_SHRD_PLPATH}/crossdomain.xml" ]; then
      rm -f ${_SHRD_PLPATH}/crossdomain.xml
      cd ${_SHRD_PLPATH}
      fix_dirs_files
    fi
    if [ ! -L "${_SHRD_PLPATH}/modules/o_contrib_seven" ]; then
      ln -sf ${_CORE}/o_contrib_seven ${_SHRD_PLPATH}/modules/o_contrib_seven
    fi
    cd ${_OCTO_PLPATH}
    ln -sf ${_SHRD_PLPATH}/.htaccess .htaccess
    ln -sf ${_SHRD_PLPATH}/authorize.php authorize.php
    ln -sf ${_SHRD_PLPATH}/cron.php cron.php
    ln -sf ${_SHRD_PLPATH}/crossdomain.xml crossdomain.xml
    ln -sf ${_SHRD_PLPATH}/includes includes
    ln -sf ${_SHRD_PLPATH}/index.php index.php
    ln -sf ${_SHRD_PLPATH}/install.php install.php
    ln -sf ${_CORE}/o_contrib_seven/js/js.php js.php
    ln -sf ${_SHRD_PLPATH}/misc misc
    ln -sf ${_SHRD_PLPATH}/modules modules
    ln -sf ${_SHRD_PLPATH}/themes themes
    ln -sf ${_SHRD_PLPATH}/update.php update.php
    ln -sf ${_SHRD_PLPATH}/web.config web.config
    ln -sf ${_SHRD_PLPATH}/xmlrpc.php xmlrpc.php
    cp -af ${_SHRD_PLPATH}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}
#
# Create D8 symlinks.
create_d8_symlinks() {
  if [ ! -L "core" ]; then
    ln -sf ${_D8_CORE_DIR}/.csslintrc .csslintrc
    ln -sf ${_D8_CORE_DIR}/.editorconfig .editorconfig
    ln -sf ${_D8_CORE_DIR}/.eslintignore .eslintignore
    ln -sf ${_D8_CORE_DIR}/.eslintrc .eslintrc
    ln -sf ${_D8_CORE_DIR}/.gitattributes .gitattributes
    ln -sf ${_D8_CORE_DIR}/.htaccess .htaccess
    ln -sf ${_D8_CORE_DIR}/autoload.php autoload.php
    ln -sf ${_D8_CORE_DIR}/composer.json composer.json
    ln -sf ${_D8_CORE_DIR}/core core
    ln -sf ${_D8_CORE_DIR}/crossdomain.xml crossdomain.xml
    ln -sf ${_D8_CORE_DIR}/example.gitignore example.gitignore
    ln -sf ${_D8_CORE_DIR}/index.php index.php
    ln -sf ${_D8_CORE_DIR}/modules modules
    ln -sf ${_D8_CORE_DIR}/profiles profiles
    ln -sf ${_D8_CORE_DIR}/themes themes
    ln -sf ${_D8_CORE_DIR}/update.php update.php
    ln -sf ${_D8_CORE_DIR}/vendor vendor
    ln -sf ${_D8_CORE_DIR}/web.config web.config
    cp -af ${_D8_CORE_DIR}/sites ./
  fi
  if [ ! -L "${_OCTO_PLPATH}/profiles" ] && [ -d "${_SHRD_PLPATH}/profiles" ]; then
    rm -rf ${_OCTO_PLPATH}/profiles
    ln -s ${_SHRD_PLPATH}/profiles ${_OCTO_PLPATH}/profiles
  fi
}
#
# Rename D7 profiles.
rename_drupal7_profiles() {
  for Files in `find ./profiles -type f`; do
    sed -i "s/name = Minimal/name = Vanilla Minimal/g"   $Files &> /dev/null
    wait
    sed -i "s/name = Standard/name = Vanilla Standard/g" $Files &> /dev/null
    wait
    sed -i "s/name = Testing/name = Vanilla Testing/g"   $Files &> /dev/null
    wait
    sed -i "s/hidden = TRUE//g"                          $Files &> /dev/null
    wait
  done
}
#
# Rename D8 profiles.
rename_drupal8_profiles() {
  for Files in `find ./core/profiles -type f`; do
    sed -i "s/name: Minimal/name: Vanilla Minimal/g"   $Files &> /dev/null
    wait
    sed -i "s/name: Standard/name: Vanilla Standard/g" $Files &> /dev/null
    wait
    sed -i "s/name: Testing/name: Vanilla Testing/g"   $Files &> /dev/null
    wait
  done
}
#
# Prepare D6 core.
prepare_drupal6_core() {
  if [ ! -e "${_D6_CORE_DIR}" ]; then
    if [ -L "${_D6_CORE_DIR}" ]; then
      unlink ${_D6_CORE_DIR}
    fi
    cd /data/all/000/core
    curl -L --max-redirs 10 -k -s -A iCab \
      "http://${_USE_MIR}/core/pressflow-${_SMALLCORE6}.tar.gz" | tar -xzf -
    find ${_D6_CORE_DIR} -type d -exec chmod 0755 {} \; &> /dev/null
    find ${_D6_CORE_DIR} -type f -exec chmod 0644 {} \; &> /dev/null
    cd ${_D6_CORE_DIR}/
    fix_dirs_files
    patch -p0 < ${pthPch}/taxonomy-6.26.patch &> /dev/null
    rm -f ${_D6_CORE_DIR}/modules/taxonomy/taxonomy.module.orig
    rm -f modules/o_contrib
    ln -s ${_CORE}/o_contrib modules/o_contrib
    ln -s ${_CORE}/o_contrib/js/js.php js.php
    cp -af ${_CORE}/o_contrib/image/image.imagemagick.inc includes/
    cp -af ${_CORE}/o_contrib/boost/stats/boost_stats.php ./ &> /dev/null
    rm -rf ${_D6_CORE_DIR}/scripts
    cd ${_D6_CORE_DIR}/themes
    get_dev_contrib "rubik-6.x-3.0-beta5.tar.gz"
    get_dev_contrib "tao-6.x-3.3.tar.gz"
    rm -f ${_D6_CORE_DIR}/sites/all/*.txt
    cd ${_CORE}
  fi
}
#
# Prepare D7 core.
prepare_drupal7_core() {
  if [ ! -e "${_D7_CORE_DIR}" ]; then
    if [ -L "${_D7_CORE_DIR}" ]; then
      unlink ${_D7_CORE_DIR}
    fi
    cd /data/all/000/core
    curl ${crlGet} \
      "http://${_USE_MIR}/core/drupal-${_SMALLCORE7}.tar.gz" \
      | tar -xzf -
    find ${_D7_CORE_DIR} -type d -exec chmod 0755 {} \; &> /dev/null
    find ${_D7_CORE_DIR} -type f -exec chmod 0644 {} \; &> /dev/null
    cd ${_D7_CORE_DIR}/
    fix_dirs_files
    rename_drupal7_profiles
    patch -p0 < ${pthPch}/taxonomy-7.12.patch &> /dev/null
    rm -f ${_D7_CORE_DIR}/modules/taxonomy/taxonomy.module.orig
    rm -f modules/o_contrib_seven
    ln -s ${_CORE}/o_contrib_seven modules/o_contrib_seven
    ln -s ${_CORE}/o_contrib_seven/js/js.php js.php
    rm -rf ${_D7_CORE_DIR}/scripts
    cd ${_D7_CORE_DIR}/themes
    get_dev_contrib "rubik-7.x-4.4.tar.gz"
    get_dev_contrib "tao-7.x-3.1.tar.gz"
    cd ${_CORE}
  fi
}
#
# Prepare D8 core.
prepare_drupal8_core() {
  if [ ! -e "${_D8_CORE_DIR}" ]; then
    if [ -L "${_D8_CORE_DIR}" ]; then
      unlink ${_D8_CORE_DIR}
    fi
    cd /data/all/000/core
    curl ${crlGet} \
      "http://${_USE_MIR}/core/drupal-${_SMALLCORE8}.tar.gz" \
      | tar -xzf -
    find ${_D8_CORE_DIR} -type d -exec chmod 0755 {} \; &> /dev/null
    find ${_D8_CORE_DIR} -type f -exec chmod 0644 {} \; &> /dev/null
    cd ${_D8_CORE_DIR}/
    patchFile="0001-Symlink-core-support-test.patch"
    patch -p1 < ${bldPth}/aegir/patches/8-core/${patchFile} &> /dev/null
    fix_dirs_files
    rename_drupal8_profiles
    ### rm -f modules/o_contrib_eight
    ### ln -s ${_CORE}/o_contrib_eight modules/o_contrib_eight
    cd ${_CORE}
  fi
}
#
# Remove D6 core from distro directory.
nocore_d6_dist_clean() {
  rm -f ${_SHRD_PLPATH}/.gitignore
  rm -f ${_SHRD_PLPATH}/.htaccess
  rm -f ${_SHRD_PLPATH}/*.php
  rm -f ${_SHRD_PLPATH}/*.txt
  rm -f ${_SHRD_PLPATH}/*.xml
  rm -rf ${_SHRD_PLPATH}/cache
  rm -rf ${_SHRD_PLPATH}/includes
  rm -rf ${_SHRD_PLPATH}/misc
  rm -rf ${_SHRD_PLPATH}/modules
  rm -rf ${_SHRD_PLPATH}/sites
  rm -rf ${_SHRD_PLPATH}/scripts
  rm -rf ${_SHRD_PLPATH}/themes
  if [ ! -d "${_SHRD_PLPATH}/profiles" ] && [ -d "${_D6_CORE_DIR}/profiles" ]; then
    rm -rf ${_SHRD_PLPATH}/profiles
    cp -af ${_D6_CORE_DIR}/profiles ${_SHRD_PLPATH}/
  fi
  sed -i "s/'dblog'/'robotstxt', 'path_alias_cache'/g" \
    ${_SHRD_PRPATH}/${_REAL_PRNAME}.profile &> /dev/null
}
#
# Remove D7 core from distro directory.
nocore_d7_dist_clean() {
  if [ "${_USE_DISTRO_CORE}" = "NO" ]; then
    rm -f ${_SHRD_PLPATH}/.gitignore
    rm -f ${_SHRD_PLPATH}/.htaccess
    rm -f ${_SHRD_PLPATH}/*.php
    rm -f ${_SHRD_PLPATH}/*.txt
    rm -f ${_SHRD_PLPATH}/*.xml
    rm -f ${_SHRD_PLPATH}/web.config
    rm -rf ${_SHRD_PLPATH}/cache
    rm -rf ${_SHRD_PLPATH}/includes
    rm -rf ${_SHRD_PLPATH}/misc
    rm -rf ${_SHRD_PLPATH}/modules
    rm -rf ${_SHRD_PLPATH}/sites
    rm -rf ${_SHRD_PLPATH}/scripts
    rm -rf ${_SHRD_PLPATH}/themes
    _REVISIONS="34 35 36 37 38 39"
    for i in $_REVISIONS; do
      if [ -d "${_CORE}/drupal-7.$i" ] && [ ! -e "${_SHRD_PLPATH}" ]; then
        mv ${_CORE}/drupal-7.$i ${_SHRD_PLPATH}
      fi
    done
    if [ ! -d "${_SHRD_PLPATH}/profiles" ] && [ -d "${_D7_CORE_DIR}/profiles" ]; then
      rm -rf ${_SHRD_PLPATH}/profiles
      cp -af ${_D7_CORE_DIR}/profiles ${_SHRD_PLPATH}/
    fi
  fi
}
#
# Remove D8 core from distro directory.
nocore_d8_dist_clean() {
  rm -rf ${_SHRD_PLPATH}/cache
  rm -rf ${_SHRD_PLPATH}/core
  rm -rf ${_SHRD_PLPATH}/includes
  rm -rf ${_SHRD_PLPATH}/misc
  rm -rf ${_SHRD_PLPATH}/modules
  rm -rf ${_SHRD_PLPATH}/scripts
  rm -rf ${_SHRD_PLPATH}/sites
  rm -rf ${_SHRD_PLPATH}/themes
  rm -rf ${_SHRD_PLPATH}/vendor
  rm -f ${_SHRD_PLPATH}/.gitignore
  rm -f ${_SHRD_PLPATH}/.htaccess
  rm -f ${_SHRD_PLPATH}/*.php
  rm -f ${_SHRD_PLPATH}/*.txt
  rm -f ${_SHRD_PLPATH}/*.xml
  rm -f ${_SHRD_PLPATH}/web.config
  if [ ! -d "${_SHRD_PLPATH}/profiles" ] && [ -d "${_D8_CORE_DIR}/profiles" ]; then
    rm -rf ${_SHRD_PLPATH}/profiles
    cp -af ${_D8_CORE_DIR}/profiles ${_SHRD_PLPATH}/
  fi
}
#
# Enable D6 admin.
enable_drupal6_admin() {
  sed -i "s/'path_alias_cache'/'path_alias_cache', 'admin'/g" \
    ${_SHRD_PRPATH}/${_REAL_PRNAME}.profile &> /dev/null
}
#
# Remove default core seven profiles.
remove_default_core_seven_profiles() {
  rm -rf ${_SHRD_PLPATH}/profiles/minimal
  rm -rf ${_SHRD_PLPATH}/profiles/standard
  rm -rf ${_SHRD_PLPATH}/profiles/testing
}
#
# Init this distro root.
init_this_distro_root() {
  mkdir -p ${_OCTO_PLPATH}
  cd ${_OCTO_PLPATH}
  if [[ "${_USE_DISTRO_CORE}" = "YES" ]]; then
    create_distro_d7_symlinks
  else
    if [[ "${_SHRD_PLNAME}" =~ "-${_SMALLCORE6}" ]]; then
      create_d6_symlinks
    elif [[ "${_SHRD_PLNAME}" =~ "-${_SMALLCORE7}" ]]; then
      create_d7_symlinks
    else
      create_d8_symlinks
    fi
  fi
}
#
# Upgrade contrib less.
upgrade_contrib_less() {
  rm -rf {context,ctools,entity,entityreference,mimemail,og}
  get_dev_contrib "context-7.x-3.6.tar.gz"
  get_dev_contrib "ctools-7.x-1.9.tar.gz"
  get_dev_contrib "entity-7.x-1.7.tar.gz"
  get_dev_contrib "entityreference-7.x-1.1.tar.gz"
  get_dev_contrib "mimemail-7.x-1.0-beta3.tar.gz"
  get_dev_contrib "og-7.x-2.7.tar.gz"
  if [ -e "views" ]; then
    cd views
    # https://drupal.org/node/1766338#comment-6445882
    patch -p1 < \
      ${pthPch}/views-revert-broken-filter-or-groups-1766338-7.patch &> /dev/null
    # https://drupal.org/node/2037469
    patch -p1 < ${pthPch}/views-exposed-sorts-2037469-1.patch &> /dev/null
    cd ../
  fi
  if [ -e "apps" ]; then
    cd apps
    patch -p1 < ${pthPch}/apps_msg.patch &> /dev/null
    cd ../
  fi
  cd ${_CORE}
}
#
# Create D7 basic platform.
create_drupal7_basic() {
  if [ ! -d "${_SHRD_PLPATH}" ]; then
    mkdir -p ${_SHRD_PLPATH}
    if [ ! -e "${_D7_CORE_DIR}" ]; then
      prepare_drupal7_core
    fi
    nocore_d7_dist_clean
  fi
  init_this_distro_root
}


###---### Checking status.
#
if [ -e "${_ROOT}/log/setupmail.txt" ]; then
  _STATUS=UPGRADE
  cd ${_ROOT}
fi


###---### User check.
#
if [ "${_DEBUG_MODE}" = "YES" ]; then
  msg "${_STATUS} C: Aegir automated install script part C"
fi
if [ `whoami` = "root" ]; then
  msg "${_STATUS} C: FATAL ERROR: This script should be ran as a non-root user"
  msg "${_STATUS} C: FATAL ERROR: Aborting AegirSetupC installer NOW!"
  touch /opt/tmp/status-AegirSetupC-FAIL
  exit 1
fi


###---### Hot Sauce check.
#
if [ "${_HOT_SAUCE}" = "NO" ]; then
  _CORE="/data/all/${_LAST_ALL}"
  _THIS_CORE="${_LAST_ALL}"
  if [ "${_USE_CURRENT}" = "YES" ] \
    && [ -e "/data/all/000/core-v-${_SMALLCORE6}.txt" ] \
    && [ -e "/data/all/000/core-v-${_SMALLCORE7}.txt" ]; then
    if [ "${_DEBUG_MODE}" = "YES" ]; then
      msg "${_STATUS} C: Shared platforms code v.${_LAST_ALL} will be used"
    fi
  elif [ "${_USE_CURRENT}" = "NO" ] \
    || [ ! -e "/data/all/000/core-v-${_SMALLCORE6}.txt" ] \
    || [ ! -e "/data/all/000/core-v-${_SMALLCORE7}.txt" ]; then
    _CORE="/data/all/${_ALL_DISTRO}"
    _THIS_CORE="${_ALL_DISTRO}"
    msg "${_STATUS} C: Shared platforms code v.${_ALL_DISTRO} (new) will be created"
  else
    if [ "${_DEBUG_MODE}" = "YES" ]; then
      msg "${_STATUS} C: Shared platforms code v.${_LAST_ALL} will be used"
    fi
  fi
else
  _CORE="/data/all/${_ALL_DISTRO}"
  _THIS_CORE="${_ALL_DISTRO}"
  msg "${_STATUS} C: Shared platforms code v.${_ALL_DISTRO} (new) will be created"
fi
_D6_CORE_DIR="/data/all/000/core/pressflow-${_SMALLCORE6}"
_D7_CORE_DIR="/data/all/000/core/drupal-${_SMALLCORE7}"
_D8_CORE_DIR="/data/all/000/core/drupal-${_SMALLCORE8}"


###---### Distributions full names.
#
_F_AGOV="aGov ${_AGOV} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_CIVICRM_M6="CiviCRM ${_CIVICRM_M6} ${_SMALLCORE6} [${_THIS_CORE}]"
_F_CIVICRM_M7="CiviCRM ${_CIVICRM_M7} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_COD="Conference 1.0-v5 ${_SMALLCORE7} [${_THIS_CORE}]"
_F_COMMERCE1="Commerce ${_COMMERCE1} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_COMMERCE2="Commerce ${_COMMERCE2} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_COMMONS2="Commons ${_COMMONS2} ${_SMALLCORE6} [${_THIS_CORE}]"
_F_COMMONS3="Commons ${_COMMONS3} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_DRUPAL6="Drupal ${_SMALLCORE6} [${_THIS_CORE}]"
_F_DRUPAL7="Drupal ${_SMALLCORE7} [${_THIS_CORE}]"
_F_DRUPAL8="Drupal ${_SMALLCORE8} [${_THIS_CORE}]"
_F_ERPAL="ERPAL ${_ERPAL} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_FSERVER="Feature Server 1.3 ${_SMALLCORE6} [${_THIS_CORE}]"
_F_GUARDR="Guardr ${_GUARDR} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENACADEMY="OpenAcademy ${_OPENACADEMY} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENAID="OpenAid ${_OPENAID} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENATRIUM7="OpenAtrium ${_OPENATRIUM7} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENBLOG="OpenBlog 1.0-v3 ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENCHURCH1="OpenChurch 1.17-b2 ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENCHURCH2="OpenChurch ${_OPENCHURCH2} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENDEALS="OpenDeals ${_OPENDEALS} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENOUTREACH="OpenOutreach ${_OPENOUTREACH} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENPUBLIC="OpenPublic ${_OPENPUBLIC} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENPUBLISH="OpenPublish 3.0-b7 ${_SMALLCORE7} [${_THIS_CORE}]"
_F_OPENSCHOLAR="OpenScholar ${_OPENSCHOLAR} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_PANOPOLY="Panopoly ${_PANOPOLY} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_RECRUITER="Recruiter ${_RECRUITER} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_RESTAURANT="Restaurant ${_RESTAURANT} ${_SMALLCORE7} [${_THIS_CORE}]"
_F_UBER_CART_T="Ubercart ${_UBERCART7} [ud2] ${_SMALLCORE7} [${_THIS_CORE}]"
_F_UBERCART6="Ubercart ${_UBERCART6} ${_SMALLCORE6} [${_THIS_CORE}]"
_F_UBERCART7="Ubercart ${_UBERCART7} [aq3] ${_SMALLCORE7} [${_THIS_CORE}]"
#
_F_DRUPAL6_D="Drupal ${_SMALLCORE6} D.${_THIS_CORE}"
_F_DRUPAL6_S="Drupal ${_SMALLCORE6} S.${_THIS_CORE}"
_F_DRUPAL6_P="Drupal ${_SMALLCORE6} P.${_THIS_CORE}"
_F_DRUPAL7_D="Drupal ${_SMALLCORE7} D.${_THIS_CORE}"
_F_DRUPAL7_S="Drupal ${_SMALLCORE7} S.${_THIS_CORE}"
_F_DRUPAL7_P="Drupal ${_SMALLCORE7} P.${_THIS_CORE}"


###---### Create directories.
#
mkdir -p ${_ROOT}/distro/${_THIS_CORE}
chmod 0711 ${_ROOT}/distro &> /dev/null
chmod 0711 ${_ROOT}/distro/${_THIS_CORE} &> /dev/null


###---###
_ALLOW_ALL=YES
if [ "${_CLIENT_CORES}" -lt "1" ]; then
  _ALLOW_ALL=NO
  _D_8_ALLOW=NO
fi
if [[ "${_VM_TEST}" =~ "3.8.4-beng" ]] \
  || [[ "${_VM_TEST}" =~ "3.7.4-beng" ]] \
  || [[ "${_VM_TEST}" =~ "3.6.15-beng" ]] \
  || [[ "${_VM_TEST}" =~ "3.2.16-beng" ]]; then
  _VMFAMILY="VS"
  if [ ! -e "/data/conf/.d8allow.cnf" ]; then
    _D_8_ALLOW=NO
  fi
else
  _VMFAMILY="XEN"
fi


###---### Prepare D6 and D7 shared core
#
prepare_drupal6_core
prepare_drupal7_core


agov_install() {
###---### aGov
#
  _REAL_PRNAME="agov"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_AGOV}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "AGV" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_AGOV - ${urlPrt}/agov" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_AGOV ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_AGOV}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_AGOV}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_AGOV} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              sed -i "s/.*entitycache.*//g" \
                ${_SHRD_PRPATH}/${_REAL_PRNAME}.info &> /dev/null
              rm -rf ${_SHRD_PRPATH}/modules/contrib/entitycache
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_AGOV installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_AGOV ${noT}"
        fi
      fi
    fi
  fi
}


commerce_7_1_install() {
###---### Commerce 7.x-1.x
#
  _REAL_PRNAME="commerce_kickstart"
  _VIRT_PRNAME="commerce"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_COMMERCE1}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "DCE" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_COMMERCE1 - http://drupalcommerce.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMERCE1 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_COMMERCE1}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/commerce-7.x-${_COMMERCE1}" ]; then
                mv commerce-7.x-${_COMMERCE1} ${_SHRD_PLNAME}
              elif [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_COMMERCE1}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_COMMERCE1} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              if [ "${_COMMERCE1}" = "1.32" ]; then
                cd ${_SHRD_PRPATH}/modules/
                rm -rf commerce
                get_dev_contrib "commerce-7.x-1.11.tar.gz"
              fi
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_COMMERCE1 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMERCE1 ${noT}"
        fi
      fi
    fi
  fi
}


commerce_7_2_install() {
###---### Commerce 7.x-2.x
#
  _REAL_PRNAME="commerce_kickstart"
  _VIRT_PRNAME="commerce"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_COMMERCE2}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "CME" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_COMMERCE2 - http://drupalcommerce.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMERCE2 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_COMMERCE2}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/commerce-7.x-${_COMMERCE2}" ]; then
                mv commerce-7.x-${_COMMERCE2} ${_SHRD_PLNAME}
              elif [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_COMMERCE2}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_COMMERCE2} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              if [ "${_COMMERCE2}" = "2.22" ]; then
                cd ${_SHRD_PLPATH}
                patch -p1 < ${pthPch}/${_REAL_PRNAME}.patch &> /dev/null
              fi
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_COMMERCE2 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMERCE2 ${noT}"
        fi
      fi
    fi
  fi
}


commons_6_install() {
###---### Commons 6.x
#
  _REAL_PRNAME="commons"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_COMMONS2}-${_SMALLCORE6}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "DCS" ]]; then
      if [ ! -d "${_OCTO_PLPATH}/modules/path_alias_cache" ]; then
        if prompt_yes_no "$_F_COMMONS2 - http://acquia.com/drupalcommons" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMONS2 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D6_CORE_DIR}" ]; then
                prepare_drupal6_core
              fi
              cd ${_CORE}
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-6.x-${_COMMONS2}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-6.x-${_COMMONS2}" ]; then
                mv ${_CORE}/commons-6.x-${_COMMONS2} ${_SHRD_PLPATH}
              fi
              if [ -e "${_SHRD_PRPATH}/drupal_commons.profile" ] \
                && [ ! -e "${_SHRD_PRPATH}/${_REAL_PRNAME}.profile" ]; then
                mv -f ${_SHRD_PRPATH}/drupal_commons.profile \
                  ${_SHRD_PRPATH}/${_REAL_PRNAME}.profile
              fi
              find ${_SHRD_PRPATH} -type f -exec sed -i \
                "s/drupal_commons/commons/g" {} \; &> /dev/null
              rm -rf ${_SHRD_PLPATH}/profiles/default
              nocore_d6_dist_clean
              if [ "${_COMMONS2}" = "2.21" ]; then
                cd ${_SHRD_PRPATH}/modules/contrib
                rm -rf flag
                get_dev_contrib "flag-6.x-2.1.tar.gz"
              fi
            else
              cd ${_CORE}
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          if [ ! -L "${_OCTO_PLPATH}/sites/all/libraries/getid3" ]; then
            mkdir -p ${_OCTO_PLPATH}/sites/all/libraries
            ln -sf ${_SHRD_PRPATH}/libraries/getid3 \
              ${_OCTO_PLPATH}/sites/all/libraries/getid3
          fi
          msg "DISTRO: $_F_COMMONS2 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMONS2 ${noT}"
        fi
      fi
    fi
  fi
}


commons_7_install() {
###---### Commons 7.x
#
  _REAL_PRNAME="commons"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_COMMONS3}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "CS7" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_COMMONS3 - http://acquia.com/drupalcommons" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMONS3 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_COMMONS3}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_COMMONS3}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_COMMONS3} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              cd ${_SHRD_PRPATH}
              patch -p1 < ${pthPch}/commons_chicken_egg.patch &> /dev/null
              sed -i "s/.*entitycache.*//g" \
                ${_SHRD_PRPATH}/${_REAL_PRNAME}.info &> /dev/null
              cd ${_SHRD_PRPATH}/modules/contrib/registration
              patch -p1 < ${pthPch}/2106995-fatal-error-non-object-1.patch &> /dev/null
              rm -rf ${_SHRD_PRPATH}/modules/contrib/entitycache
              rm -rf ${_SHRD_PRPATH}/modules/contrib/registry_rebuild
              rm -rf ${_SHRD_PRPATH}/modules/contrib/acquia_connector
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_COMMONS3 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_COMMONS3 ${noT}"
        fi
      fi
    fi
  fi
}


drupal6_install() {
###---### Drupal 6 Pressflow
#
  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D6D" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D6S" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D6P" ]]; then
    pthPfw="pressflow-${_SMALLCORE6}-dev/modules/path_alias_cache"
    if [ ! -d "${_ROOT}/distro/${_THIS_CORE}/${pthPfw}" ]; then
      if prompt_yes_no "$_F_DRUPAL6 - http://pressflow.org" ; then
        true
        ###---### Drupal 6 Pressflow Development
        #
        _REAL_PRNAME="default"
        _VIRT_PRNAME="pressflow"
        _SHRD_PLNAME="$_VIRT_PRNAME-${_SMALLCORE6}-dev"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D6D" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL6_D ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              prepare_drupal6_core
            fi
            cd ${_CORE}
            mkdir -p ${_SHRD_PLPATH}
            nocore_d6_dist_clean
            enable_drupal6_admin
          fi
          init_this_distro_root
          msg "DISTRO: $_F_DRUPAL6_D installed"
          _RUN_VERIFY=YES
        fi
        ###---### Drupal 6 Pressflow Staging
        #
        _REAL_PRNAME="default"
        _VIRT_PRNAME="pressflow"
        _SHRD_PLNAME="$_VIRT_PRNAME-${_SMALLCORE6}-stage"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D6S" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL6_S ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              prepare_drupal6_core
            fi
            cd ${_CORE}
            mkdir -p ${_SHRD_PLPATH}
            nocore_d6_dist_clean
            enable_drupal6_admin
          fi
          init_this_distro_root
          msg "DISTRO: $_F_DRUPAL6_S installed"
          _RUN_VERIFY=YES
        fi
        ###---### Drupal 6 Pressflow Production
        #
        _REAL_PRNAME="default"
        _VIRT_PRNAME="pressflow"
        _SHRD_PLNAME="$_VIRT_PRNAME-${_SMALLCORE6}-prod"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D6P" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL6 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              prepare_drupal6_core
            fi
            cd ${_CORE}
            mkdir -p ${_SHRD_PLPATH}
            nocore_d6_dist_clean
            enable_drupal6_admin
          fi
          init_this_distro_root
          msg "DISTRO: $_F_DRUPAL6_P installed"
          _RUN_VERIFY=YES
        fi
      else
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL6 ${noT}"
      fi
    fi
  fi
}


drupal7_install() {
###---### Drupal 7
#
  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D7D" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D7S" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "D7P" ]]; then
    if [ ! -d "${_ROOT}/distro/${_THIS_CORE}/${_DRUPAL7D}" ]; then
      if prompt_yes_no "$_F_DRUPAL7 - https://drupal.org/drupal-7.43-release-notes" ; then
        true
        ###---### Drupal 7 Development
        #
        _REAL_PRNAME="standard"
        _SHRD_PLNAME="${_DRUPAL7D}"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D7D" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL7_D ${yOk}"
          create_drupal7_basic
          msg "DISTRO: $_F_DRUPAL7_D installed"
          _RUN_VERIFY=YES
        fi
        ###---### Drupal 7 Staging
        #
        _REAL_PRNAME="standard"
        _SHRD_PLNAME="${_DRUPAL7S}"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D7S" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL7_S ${yOk}"
          create_drupal7_basic
          msg "DISTRO: $_F_DRUPAL7_S installed"
          _RUN_VERIFY=YES
        fi
        ###---### Drupal 7 Production
        #
        _REAL_PRNAME="standard"
        _SHRD_PLNAME="${_DRUPAL7P}"
        _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
        _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
        _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
        if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
          || [[ "${_PLATFORMS_LIST}" =~ "D7P" ]]; then
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL7_P ${yOk}"
          create_drupal7_basic
          msg "DISTRO: $_F_DRUPAL7_P installed"
          _RUN_VERIFY=YES
        fi
      else
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL7 ${noT}"
      fi
    fi
  fi
}


drupal8_install() {
###---### Drupal 8
#
  _REAL_PRNAME="standard"
  _SHRD_PLNAME="drupal-${_SMALLCORE8}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_D_8_ALLOW}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "D8R" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_DRUPAL8 - http://drupal.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL8 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ ! -e "${_D8_CORE_DIR}" ]; then
              prepare_drupal8_core
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_DRUPAL8 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_DRUPAL8 ${noT}"
        fi
      fi
    fi
  fi
}


erpal_install() {
###---### ERPAL
#
  _REAL_PRNAME="erpal"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_ERPAL}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "ERP" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_ERPAL - ${urlPrt}/erpal" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_ERPAL ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_ERPAL}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_ERPAL}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_ERPAL} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              sed -i "s/.*entitycache.*//g" \
                ${_SHRD_PRPATH}/${_REAL_PRNAME}.info &> /dev/null
              sed -i "s/\$options +=/\/\/\$options +=/g" \
                ${_SHRD_PRPATH}/modules/contrib/flag/includes/flag/flag_flag.inc &> /dev/null
              sed -i "s/\$options +=/\/\/\$options +=/g" \
                ${_SHRD_PRPATH}/modules/contrib/flag/flag_flag.inc &> /dev/null
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_ERPAL installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_ERPAL ${noT}"
        fi
      fi
    fi
  fi
}


fserver_install() {
###---### Feature Server Make
#
  _REAL_PRNAME="feature_server"
  _VIRT_PRNAME="fserver"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_SMALLCORE6}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "FSR" ]]; then
    if [ ! -d "${_OCTO_PLPATH}/modules/path_alias_cache" ]; then
      if prompt_yes_no "$_F_FSERVER - http://bit.ly/fservermore" ; then
        true
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_FSERVER ${yOk}"
        if [ ! -d "${_SHRD_PLPATH}" ]; then
          if [ "${_AEGIR_VERSION}" = "HEAD" ] \
            && [ "${_T_BUILD}" = "HEAD" ]; then
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              prepare_drupal6_core
            fi
            cd ${_CORE}
            echo "api = 2" > fserver.make
            echo "core = 6.x" >> fserver.make
            echo "projects[pressflow][type] = \"core\"" >> fserver.make
            echo "projects[pressflow][download][type] = \"get\"" >> fserver.make
            echo "projects[pressflow][download][url] = \"http://${_USE_MIR}/core/pressflow-6.38.2.tar.gz\"" >> fserver.make
            echo "projects[${_REAL_PRNAME}][type] = \"profile\"" >> fserver.make
            echo "projects[${_REAL_PRNAME}][download][type] = \"git\"" >> fserver.make
            echo "projects[${_REAL_PRNAME}][download][url] = \"https://github.com/omega8cc/${_REAL_PRNAME}.git\"" >> fserver.make
            ${_DRUSHCMD} make fserver.make ${_SHRD_PLNAME} &> /dev/null
            nocore_d6_dist_clean
            rm -f fserver.make
            rm -rf ${_SHRD_PLPATH}/profiles/default
            cd ${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}/themes
            patch -p0 \
              < ${pthPch}/singular.patch &> /dev/null
            patch -p0 \
              < ${pthPch}/singular.mft.patch &> /dev/null
          else
            cd ${_CORE}
            get_distro_ext "${_SHRD_PLNAME}.tar.gz"
          fi
        fi
        init_this_distro_root
        msg "DISTRO: $_F_FSERVER installed"
        _RUN_VERIFY=YES
      else
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_FSERVER ${noT}"
      fi
    fi
  fi
}


guardr_install() {
###---### Guardr
#
  _REAL_PRNAME="guardr"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_GUARDR}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "GDR" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_GUARDR - ${urlPrt}/guardr" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_GUARDR ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_GUARDR}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_GUARDR}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_GUARDR} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              sed -i "s/.*entitycache.*//g" \
                ${_SHRD_PRPATH}/${_REAL_PRNAME}.info &> /dev/null
              rm -rf ${_SHRD_PRPATH}/modules/contrib/entitycache
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_GUARDR installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_GUARDR ${noT}"
        fi
      fi
    fi
  fi
}


openacademy_install() {
###---### OpenAcademy
#
  _REAL_PRNAME="openacademy"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENACADEMY}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OAY" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENACADEMY - ${urlPrt}/openacademy" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENACADEMY ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENACADEMY}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENACADEMY}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENACADEMY} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENACADEMY installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENACADEMY ${noT}"
        fi
      fi
    fi
  fi
}


openaid_install() {
###---### OpenAid
#
  _REAL_PRNAME="openaid"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENAID}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OAD" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENAID - ${urlPrt}/openaid" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENAID ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENAID}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENAID}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENAID} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              rm -rf ${_SHRD_PRPATH}/libraries/plupload/examples
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENAID installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENAID ${noT}"
        fi
      fi
    fi
  fi
}


openatrium7_install() {
###---### OpenAtrium D7
#
  _REAL_PRNAME="openatrium"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENATRIUM7}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OA7" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENATRIUM7 - http://openatrium.com" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENATRIUM7 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENATRIUM7}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENATRIUM7}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENATRIUM7} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              cd ${_SHRD_PRPATH}/modules/contrib
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENATRIUM7 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENATRIUM7 ${noT}"
        fi
      fi
    fi
  fi
}


openblog_install() {
###---### OpenBlog
#
  _REAL_PRNAME="openblog"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENBLOG}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OBG" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENBLOG - ${urlPrt}/openblog" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENBLOG ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENBLOG}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENBLOG}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENBLOG} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENBLOG installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENBLOG ${noT}"
        fi
      fi
    fi
  fi
}


openchurch1_install() {
###---### OpenChurch
#
  _REAL_PRNAME="openchurch"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENCHURCH1}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OCH" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENCHURCH1 - http://openchurchsite.com" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENCHURCH1 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENCHURCH1}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENCHURCH1}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENCHURCH1} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              rm -rf ${_SHRD_PRPATH}/libraries/plupload/examples
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENCHURCH1 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENCHURCH1 ${noT}"
        fi
      fi
    fi
  fi
}


openchurch2_install() {
###---### OpenChurch
#
  _REAL_PRNAME="openchurch"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENCHURCH2}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "CH2" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENCHURCH2 - http://openchurchsite.com" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENCHURCH2 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENCHURCH2}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENCHURCH2}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENCHURCH2} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              rm -rf ${_SHRD_PRPATH}/libraries/plupload/examples
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENCHURCH2 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENCHURCH2 ${noT}"
        fi
      fi
    fi
  fi
}


opendeals_install() {
###---### OpenDeals
#
  _REAL_PRNAME="opendeals"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENDEALS}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "ODS" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENDEALS - http://opendealsapp.com" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENDEALS ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENDEALS}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENDEALS}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENDEALS} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENDEALS installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENDEALS ${noT}"
        fi
      fi
    fi
  fi
}


openoutreach_install() {
###---### OpenOutreach
#
  _REAL_PRNAME="openoutreach"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENOUTREACH}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OOH" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENOUTREACH - http://openoutreach.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENOUTREACH ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENOUTREACH}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENOUTREACH}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENOUTREACH} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              cd ${_SHRD_PRPATH}
              patch -p1 < ${pthPch}/${_REAL_PRNAME}.patch &> /dev/null
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENOUTREACH installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENOUTREACH ${noT}"
        fi
      fi
    fi
  fi
}


openpublic_install() {
###---### OpenPublic
#
  _REAL_PRNAME="openpublic"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENPUBLIC}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OPC" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENPUBLIC - http://openpublicapp.com" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENPUBLIC ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_OPENPUBLIC}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENPUBLIC}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENPUBLIC} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_OPENPUBLIC installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENPUBLIC ${noT}"
        fi
      fi
    fi
  fi
}


openscholar_install() {
###---### OpenScholar
#
  _REAL_PRNAME="openscholar"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_OPENSCHOLAR}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "OSR" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_OPENSCHOLAR - http://theopenscholar.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENSCHOLAR ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              get_distro_ext "${_REAL_PRNAME}-7.x-${_OPENSCHOLAR}.tar.gz"
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_OPENSCHOLAR}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_OPENSCHOLAR} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              rm -rf ${_SHRD_PRPATH}/modules/contrib/{entitycache,expire}
              sed -i "s/.*entitycache.*//g" \
                ${_SHRD_PRPATH}/${_REAL_PRNAME}.info &> /dev/null
              cd ${_SHRD_PRPATH}/modules/contrib
              rm -rf {biblio,boxes,entityreference_prepopulate,restws}
              get_dev_contrib "biblio-7.x-1.0-rc7.tar.gz"
              get_dev_contrib "boxes-7.x-1.2.tar.gz"
              get_dev_contrib "entityreference_prepopulate-7.x-1.5.tar.gz"
              get_dev_contrib "restws-7.x-2.2.tar.gz"
              upgrade_contrib_less
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          mkdir -p ${_OCTO_PLPATH}/sites/all/libraries
          msg "DISTRO: $_F_OPENSCHOLAR installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_OPENSCHOLAR ${noT}"
        fi
      fi
    fi
  fi
}


panopoly_install() {
###---### Panopoly
#
  _REAL_PRNAME="panopoly"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_PANOPOLY}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "PPY" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_PANOPOLY - ${urlPrt}/panopoly" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_PANOPOLY ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_PANOPOLY}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_PANOPOLY}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_PANOPOLY} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              if [ ! -d "${_SHRD_PRPATH}/modules/panopoly/panopoly_demo" ]; then
                if [ -d "${_SHRD_PLPATH}/sites/all/modules/panopoly_demo" ]; then
                  mv -f ${_SHRD_PLPATH}/sites/all/modules/panopoly_demo \
                    ${_SHRD_PRPATH}/modules/panopoly/ &> /dev/null
                else
                  cd ${_SHRD_PRPATH}/modules/panopoly
                  get_dev_contrib "panopoly_demo-7.x-${_PANOPOLY}.tar.gz"
                fi
              fi
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_PANOPOLY installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_PANOPOLY ${noT}"
        fi
      fi
    fi
  fi
}


recruiter_install() {
###---### Recruiter
#
  _REAL_PRNAME="recruiter"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_RECRUITER}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "RER" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_RECRUITER - ${urlPrt}/recruiter" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_RECRUITER ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_RECRUITER}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_RECRUITER}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_RECRUITER} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_RECRUITER installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_RECRUITER ${noT}"
        fi
      fi
    fi
  fi
}


restaurant_install() {
###---### Restaurant
#
  _REAL_PRNAME="restaurant"
  _SHRD_PLNAME="${_REAL_PRNAME}-${_RESTAURANT}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "RST" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_RESTAURANT - ${urlPrt}/restaurant" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_RESTAURANT ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              curl ${crlGet} \
                "${urlDrp}/${_REAL_PRNAME}-7.x-${_RESTAURANT}-core.tar.gz" \
                | tar -xzf -
              if [ -d "${_CORE}/${_REAL_PRNAME}-7.x-${_RESTAURANT}" ]; then
                mv ${_REAL_PRNAME}-7.x-${_RESTAURANT} ${_SHRD_PLNAME}
              fi
              nocore_d7_dist_clean
              remove_default_core_seven_profiles
              # cd ${_SHRD_PRPATH}
              # patch -p1 < ${pthPch}/${_REAL_PRNAME}.patch &> /dev/null
              # if [ -d "${_SHRD_PRPATH}/modules/restaurant/restaurant_demo/import" ]; then
              #   cd ${_SHRD_PRPATH}/modules/restaurant/restaurant_demo/import
              #   patch -p1 < ${pthPch}/restaurant_demo.patch &> /dev/null
              # fi
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_RESTAURANT installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_RESTAURANT ${noT}"
        fi
      fi
    fi
  fi
}


ubercart6_install() {
###---### Ubercart 2
#
  _REAL_PRNAME="uberdrupal"
  _VIRT_PRNAME="ubercart"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_UBERCART6}-${_SMALLCORE6}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
    || [[ "${_PLATFORMS_LIST}" =~ "UCT" ]]; then
    if [ ! -d "${_OCTO_PLPATH}/modules/path_alias_cache" ]; then
      if prompt_yes_no "$_F_UBERCART6 - http://ubercart.org" ; then
        true
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBERCART6 ${yOk}"
        if [ ! -d "${_SHRD_PLPATH}" ]; then
          if [ "${_AEGIR_VERSION}" = "HEAD" ] \
            && [ "${_T_BUILD}" = "HEAD" ]; then
            cd ${_CORE}
            if [ ! -e "${_D6_CORE_DIR}" ]; then
              prepare_drupal6_core
            fi
            mkdir -p ${_SHRD_PLPATH}
            nocore_d6_dist_clean
            rm -rf ${_SHRD_PLPATH}/profiles/default
            cd ${_SHRD_PLPATH}/profiles
            get_dev_contrib "uberdrupal.tar.gz"
            cd ${_CORE}
            mkdir -p ${_SHRD_PRPATH}/{modules,themes,libraries}
            cd ${_SHRD_PRPATH}/libraries
            get_dev_contrib "colorbox-1.3.18.zip"
            cd ${_SHRD_PRPATH}/modules
            get_dev_contrib "admin_menu-6.x-3.x-dev.tar.gz"
            get_dev_contrib "cck-6.x-3.0-alpha4.tar.gz"
            get_dev_contrib "colorbox-6.x-1.4.tar.gz"
            get_dev_contrib "date-6.x-2.9.tar.gz"
            get_dev_contrib "filefield-6.x-3.14.tar.gz"
            get_dev_contrib "google_analytics-6.x-4.1.tar.gz"
            get_dev_contrib "imageapi-6.x-1.10.tar.gz"
            get_dev_contrib "imagecache-6.x-2.x-dev.tar.gz"
            get_dev_contrib "imagefield-6.x-3.11.tar.gz"
            get_dev_contrib "jquery_update-6.x-2.0-alpha1.tar.gz"
            get_dev_contrib "libraries-6.x-1.0.tar.gz"
            get_dev_contrib "lightbox2-6.x-1.x-dev.tar.gz"
            get_dev_contrib "rules-6.x-1.5.tar.gz"
            get_dev_contrib "skinr-6.x-1.7.tar.gz"
            get_dev_contrib "token-6.x-1.19.tar.gz"
            get_dev_contrib "ubercart-6.x-${_UBERCART6}.tar.gz"
            get_dev_contrib "views-6.x-3.3.tar.gz"
            get_dev_contrib "webform-6.x-3.23.tar.gz"
            ### https://drupal.org/node/1167276#comment-5138248
            cd ${_SHRD_PRPATH}/modules/$_VIRT_PRNAME
            patch -p1 < ${pthPch}/$_VIRT_PRNAME-1167276-reroll.patch &> /dev/null
            cd ${_SHRD_PRPATH}/modules/imagecache
            # https://drupal.org/node/1243258#comment-4850634
            patch -p1 < ${pthPch}/imagecache-1243258-5.patch &> /dev/null
            cd ${_SHRD_PRPATH}/themes
            get_dev_contrib "fusion-6.x-1.x-dev.tar.gz"
            get_dev_contrib "acquia_prosper-6.x-1.1.tar.gz"
          else
            cd ${_CORE}
            get_distro_ext "${_SHRD_PLNAME}.tar.gz"
          fi
        fi
        init_this_distro_root
        msg "DISTRO: $_F_UBERCART6 installed"
        _RUN_VERIFY=YES
      else
        [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBERCART6 ${noT}"
      fi
    fi
  fi
}


ubercart7_install() {
###---### Ubercart 3
#
  _REAL_PRNAME="minimal"
  _VIRT_PRNAME="ubercart"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_UBERCART7}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "UC7" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_UBERCART7 - http://ubercart.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBERCART7 ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              mkdir -p ${_SHRD_PLPATH}
              nocore_d7_dist_clean
              rm -rf ${_SHRD_PLPATH}/profiles/standard
              rm -rf ${_SHRD_PLPATH}/profiles/testing
              sed -i "s/version = VERSION/version = \"${_SMALLCORE7}\"/g" \
                ${_SHRD_PLPATH}/profiles/minimal/minimal.info &> /dev/null
              mkdir -p ${_SHRD_PRPATH}/libraries
              cd ${_SHRD_PRPATH}/libraries
              get_dev_contrib "colorbox-1.5.13.zip"
              if [ -d "colorbox-master" ]; then
                mv -f colorbox-master colorbox
              fi
              mkdir -p ${_SHRD_PRPATH}/modules
              cd ${_SHRD_PRPATH}/modules
              get_dev_contrib "colorbox-7.x-2.10.tar.gz"
              get_dev_contrib "ctools-7.x-1.9.tar.gz"
              get_dev_contrib "entity-7.x-1.7.tar.gz"
              get_dev_contrib "google_analytics-7.x-2.1.tar.gz"
              get_dev_contrib "libraries-7.x-2.x-dev.tar.gz"
              get_dev_contrib "pathauto-7.x-1.3.tar.gz"
              get_dev_contrib "rules-7.x-2.9.tar.gz"
              get_dev_contrib "token-7.x-1.6.tar.gz"
              get_dev_contrib "ubercart-7.x-${_UBERCART7}.tar.gz"
              get_dev_contrib "views-7.x-3.14.tar.gz"
              cd ${_SHRD_PRPATH}/modules/views
              # https://drupal.org/node/1766338#comment-6445882
              patch -p1 < \
                ${pthPch}/views-revert-broken-filter-or-groups-1766338-7.patch &> /dev/null
              # https://drupal.org/node/2037469
              patch -p1 < \
                ${pthPch}/views-exposed-sorts-2037469-1.patch &> /dev/null
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_UBERCART7 installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBERCART7 ${noT}"
        fi
      fi
    fi
  fi
}


ubercart7_testing_install() {
###---### Ubercart 3 with testing profile
#
  _REAL_PRNAME="testing"
  _VIRT_PRNAME="ubercart-${_REAL_PRNAME}"
  _SHRD_PLNAME="$_VIRT_PRNAME-${_UBERCART7}-${_SMALLCORE7}"
  _SHRD_PLPATH="${_CORE}/${_SHRD_PLNAME}"
  _SHRD_PRPATH="${_SHRD_PLPATH}/profiles/${_REAL_PRNAME}"
  _OCTO_PLPATH="${_ROOT}/distro/${_THIS_CORE}/${_SHRD_PLNAME}"
  if [ "${_ALLOW_ALL}" = "YES" ]; then
    if [[ "${_PLATFORMS_LIST}" =~ "ALL" ]] \
      || [[ "${_PLATFORMS_LIST}" =~ "UC7" ]]; then
      if [ ! -d "${_OCTO_PLPATH}" ]; then
        if prompt_yes_no "$_F_UBER_CART_T - http://ubercart.org" ; then
          true
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBER_CART_T ${yOk}"
          if [ ! -d "${_SHRD_PLPATH}" ]; then
            cd ${_CORE}
            if [ "${_AEGIR_VERSION}" = "HEAD" ] \
              && [ "${_T_BUILD}" = "HEAD" ]; then
              if [ ! -e "${_D7_CORE_DIR}" ]; then
                prepare_drupal7_core
              fi
              mkdir -p ${_SHRD_PLPATH}
              nocore_d7_dist_clean
              rm -rf ${_SHRD_PLPATH}/profiles/standard
              rm -rf ${_SHRD_PLPATH}/profiles/minimal
              sed -i "s/version = VERSION/version = \"${_SMALLCORE7}\"/g" \
                ${_SHRD_PLPATH}/profiles/testing/testing.info &> /dev/null
              mkdir -p ${_SHRD_PRPATH}/libraries
              cd ${_SHRD_PRPATH}/libraries
              get_dev_contrib "colorbox-1.5.13.zip"
              if [ -d "colorbox-master" ]; then
                mv -f colorbox-master colorbox
              fi
              mkdir -p ${_SHRD_PRPATH}/modules
              cd ${_SHRD_PRPATH}/modules
              get_dev_contrib "colorbox-7.x-2.10.tar.gz"
              get_dev_contrib "ctools-7.x-1.9.tar.gz"
              get_dev_contrib "entity-7.x-1.7.tar.gz"
              get_dev_contrib "google_analytics-7.x-2.1.tar.gz"
              get_dev_contrib "libraries-7.x-2.x-dev.tar.gz"
              get_dev_contrib "pathauto-7.x-1.3.tar.gz"
              get_dev_contrib "rules-7.x-2.9.tar.gz"
              get_dev_contrib "token-7.x-1.6.tar.gz"
              get_dev_contrib "ubercart-7.x-${_UBERCART7}.tar.gz"
              get_dev_contrib "views-7.x-3.14.tar.gz"
              cd ${_SHRD_PRPATH}/modules/views
              # https://drupal.org/node/1766338#comment-6445882
              patch -p1 < \
                ${pthPch}/views-revert-broken-filter-or-groups-1766338-7.patch &> /dev/null
              # https://drupal.org/node/2037469
              patch -p1 < \
                ${pthPch}/views-exposed-sorts-2037469-1.patch &> /dev/null
            else
              get_distro_ext "${_SHRD_PLNAME}.tar.gz"
            fi
          fi
          init_this_distro_root
          msg "DISTRO: $_F_UBER_CART_T installed"
          _RUN_VERIFY=YES
        else
          [ "${_DEBUG_MODE}" = "YES" ] && msg "DISTRO: $_F_UBER_CART_T ${noT}"
        fi
      fi
    fi
  fi
}


###---### Save & verify platforms.
#
save_verify_platforms() {
  _LOCAL_STATUS="NOT_SET"
  if [ -e "/var/run/aegir_upgrade.pid" ]; then
    _LOCAL_STATUS=INIT
  fi
  if [ "$_LOCAL_STATUS" = "INIT" ]; then
    _THIS_HM="${_HM_ROOT}/sites/${_DOMAIN}"
  else
    if [ -e "${_ROOT}/.drush/hostmaster.alias.drushrc.php" ]; then
      _THIS_HM=$(cat ${_ROOT}/.drush/hostmaster.alias.drushrc.php \
        | grep 'site_path' \
        | cut -d: -f2 \
        | awk '{ print $3}' 2>&1)
      _THIS_HM=$(echo ${_THIS_HM} | sed "s/[\,']//g" 2>&1)
    else
      _THIS_HM="${_HM_ROOT}/sites/${_DOMAIN}"
    fi
  fi
  if [ -d "${_THIS_HM}" ]; then
    cd ${_THIS_HM}
  else
    _THIS_HM="${_PREV_HM_ROOT}/sites/${_DOMAIN}"
    cd ${_THIS_HM}
  fi
  cp -af /opt/tmp/boa/aegir/helpers/make_platform.php.txt ./
  mv -f make_platform.php.txt make_platform.php &> /dev/null

  if [ "${_SERIES_RESULT}" = "OK" ]; then
    drhSrc="sites/all/drush/drushrc.php"
  else
    drhSrc="drushrc.php"
  fi

  pthDst="${_ROOT}/distro/${_THIS_CORE}"

  if [ -d "${pthDst}/${_DRUPAL7D}" ]; then
    if [ ! -e "${pthDst}/${_DRUPAL7D}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL7_D" standard \
        ${pthDst}/${_DRUPAL7D} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/${_DRUPAL7S}" ]; then
    if [ ! -e "${pthDst}/${_DRUPAL7S}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL7_S" standard \
        ${pthDst}/${_DRUPAL7S} &> /dev/null
    fi
  fi
  if [ ! -d "${pthDst}/${_DRUPAL7}" ]; then
    if [ -d "${pthDst}/${_DRUPAL7P}" ]; then
      if [ ! -e "${pthDst}/${_DRUPAL7P}/$drhSrc" ]; then
        ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL7_P" standard \
          ${pthDst}/${_DRUPAL7P} &> /dev/null
      fi
    fi
  elif [ ! -d "${pthDst}/${_DRUPAL7P}" ]; then
    if [ -d "${pthDst}/${_DRUPAL7}" ]; then
      if [ ! -e "${pthDst}/${_DRUPAL7}/$drhSrc" ]; then
        ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL7_P" standard \
          ${pthDst}/${_DRUPAL7} &> /dev/null
      fi
    fi
  fi
  if [ -d "${pthDst}/agov-${_AGOV}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/agov-${_AGOV}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_AGOV" agov \
        ${pthDst}/agov-${_AGOV}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/civicrm-${_CIVICRM_M6}-${_SMALLCORE6}" ]; then
    if [ ! -e "${pthDst}/civicrm-${_CIVICRM_M6}-${_SMALLCORE6}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_CIVICRM_M6" default \
        ${pthDst}/civicrm-${_CIVICRM_M6}-${_SMALLCORE6} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/civicrm-${_CIVICRM_M7}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/civicrm-${_CIVICRM_M7}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_CIVICRM_M7" default \
        ${pthDst}/civicrm-${_CIVICRM_M7}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/cod-${_COD}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/cod-${_COD}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_COD" cod \
        ${pthDst}/cod-${_COD}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/commerce-${_COMMERCE1}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/commerce-${_COMMERCE1}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_COMMERCE1" commerce_kickstart \
        ${pthDst}/commerce-${_COMMERCE1}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/commerce-${_COMMERCE2}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/commerce-${_COMMERCE2}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_COMMERCE2" commerce_kickstart \
        ${pthDst}/commerce-${_COMMERCE2}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/commons-${_COMMONS2}-${_SMALLCORE6}" ]; then
    if [ ! -e "${pthDst}/commons-${_COMMONS2}-${_SMALLCORE6}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_COMMONS2" commons \
        ${pthDst}/commons-${_COMMONS2}-${_SMALLCORE6} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/commons-${_COMMONS3}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/commons-${_COMMONS3}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_COMMONS3" commons \
        ${pthDst}/commons-${_COMMONS3}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/drupal-${_SMALLCORE8}" ]; then
    if [ ! -e "${pthDst}/drupal-${_SMALLCORE8}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL8" standard \
        ${pthDst}/drupal-${_SMALLCORE8} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/erpal-${_ERPAL}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/erpal-${_ERPAL}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_ERPAL" erpal \
        ${pthDst}/erpal-${_ERPAL}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/fserver-${_SMALLCORE6}" ]; then
    if [ ! -e "${pthDst}/fserver-${_SMALLCORE6}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_FSERVER" feature_server \
        ${pthDst}/fserver-${_SMALLCORE6} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/guardr-${_GUARDR}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/guardr-${_GUARDR}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_GUARDR" guardr \
        ${pthDst}/guardr-${_GUARDR}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openacademy-${_OPENACADEMY}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openacademy-${_OPENACADEMY}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENACADEMY" openacademy \
        ${pthDst}/openacademy-${_OPENACADEMY}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openaid-${_OPENAID}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openaid-${_OPENAID}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENAID" openaid \
        ${pthDst}/openaid-${_OPENAID}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openatrium-${_OPENATRIUM7}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openatrium-${_OPENATRIUM7}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENATRIUM7" openatrium \
        ${pthDst}/openatrium-${_OPENATRIUM7}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openblog-${_OPENBLOG}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openblog-${_OPENBLOG}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENBLOG" openblog \
        ${pthDst}/openblog-${_OPENBLOG}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openchurch-${_OPENCHURCH1}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openchurch-${_OPENCHURCH1}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENCHURCH1" openchurch \
        ${pthDst}/openchurch-${_OPENCHURCH1}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openchurch-${_OPENCHURCH2}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openchurch-${_OPENCHURCH2}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENCHURCH2" openchurch \
        ${pthDst}/openchurch-${_OPENCHURCH2}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/opendeals-${_OPENDEALS}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/opendeals-${_OPENDEALS}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENDEALS" \
        opendeals ${pthDst}/opendeals-${_OPENDEALS}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openoutreach-${_OPENOUTREACH}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openoutreach-${_OPENOUTREACH}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENOUTREACH" openoutreach \
        ${pthDst}/openoutreach-${_OPENOUTREACH}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openpublic-${_OPENPUBLIC}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openpublic-${_OPENPUBLIC}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENPUBLIC" openpublic \
        ${pthDst}/openpublic-${_OPENPUBLIC}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openpublish-${_OPENPUBLISH}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openpublish-${_OPENPUBLISH}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENPUBLISH" openpublish \
        ${pthDst}/openpublish-${_OPENPUBLISH}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/openscholar-${_OPENSCHOLAR}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/openscholar-${_OPENSCHOLAR}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_OPENSCHOLAR" openscholar \
        ${pthDst}/openscholar-${_OPENSCHOLAR}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/panopoly-${_PANOPOLY}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/panopoly-${_PANOPOLY}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_PANOPOLY" panopoly \
        ${pthDst}/panopoly-${_PANOPOLY}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/recruiter-${_RECRUITER}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/recruiter-${_RECRUITER}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_RECRUITER" recruiter \
        ${pthDst}/recruiter-${_RECRUITER}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/restaurant-${_RESTAURANT}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/restaurant-${_RESTAURANT}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_RESTAURANT" restaurant \
        ${pthDst}/restaurant-${_RESTAURANT}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/ubercart-${_UBERCART6}-${_SMALLCORE6}" ]; then
    if [ ! -e "${pthDst}/ubercart-${_UBERCART6}-${_SMALLCORE6}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_UBERCART6" uberdrupal \
        ${pthDst}/ubercart-${_UBERCART6}-${_SMALLCORE6} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/ubercart-${_UBERCART7}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/ubercart-${_UBERCART7}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_UBERCART7" minimal \
        ${pthDst}/ubercart-${_UBERCART7}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/ubercart-testing-${_UBERCART7}-${_SMALLCORE7}" ]; then
    if [ ! -e "${pthDst}/ubercart-testing-${_UBERCART7}-${_SMALLCORE7}/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_UBER_CART_T" testing \
        ${pthDst}/ubercart-testing-${_UBERCART7}-${_SMALLCORE7} &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/pressflow-${_SMALLCORE6}-dev" ]; then
    if [ ! -e "${pthDst}/pressflow-${_SMALLCORE6}-dev/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL6_D" default \
        ${pthDst}/pressflow-${_SMALLCORE6}-dev &> /dev/null
    fi
  fi
  if [ -d "${pthDst}/pressflow-${_SMALLCORE6}-stage" ]; then
    if [ ! -e "${pthDst}/pressflow-${_SMALLCORE6}-stage/$drhSrc" ]; then
      ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL6_S" default \
        ${pthDst}/pressflow-${_SMALLCORE6}-stage &> /dev/null
    fi
  fi
  if [ ! -d "${pthDst}/pressflow" ]; then
    if [ -d "${pthDst}/pressflow-${_SMALLCORE6}-prod" ]; then
      if [ ! -e "${pthDst}/pressflow-${_SMALLCORE6}-prod/$drhSrc" ]; then
        ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL6_P" default \
          ${pthDst}/pressflow-${_SMALLCORE6}-prod &> /dev/null
      fi
    fi
  elif [ ! -d "${pthDst}/pressflow-${_SMALLCORE6}-prod" ]; then
    if [ -d "${pthDst}/pressflow" ]; then
      if [ ! -e "${pthDst}/pressflow/$drhSrc" ]; then
        ${_DRUSHCMD} php-script make_platform "$_F_DRUPAL6_P" default \
          ${pthDst}/pressflow &> /dev/null
      fi
    fi
  fi
  if [ -e "/var/run/aegir_upgrade.pid" ]; then
    _PLATF_IMP=$(ls -la /data/u \
      | grep ${_USER} \
      | cut -d'>' -f2 \
      | sort \
      | uniq \
      | awk '{ print $1}')
    for _PLATF in ${_PLATF_IMP}; do
      if [[ "${_PLATF}" =~ "aegir" ]]; then
        _FOUND_HM=YES
      else
        _PLATF_NAME=${_PLATF##*/}
        ${_DRUSHCMD} php-script make_platform "${_PLATF_NAME} ($RANDOM)" default \
          ${_PLATF}
      fi
    done
  fi
  rm -f make_platform.php
}

drupal6_install
drupal7_install
drupal8_install

agov_install
commerce_7_1_install
commerce_7_2_install
commons_6_install
commons_7_install

### _USE_DISTRO_CORE=YES
### erpal_install
### _USE_DISTRO_CORE=NO
### TMP OFF -- doesn't work with latest core and comes with too old core version

guardr_install
openaid_install
openatrium7_install
openchurch2_install
openoutreach_install
openpublic_install

### _USE_DISTRO_CORE=YES
### openscholar_install
### _USE_DISTRO_CORE=NO
### TMP OFF -- doesn't work with latest core and comes with too old core version

panopoly_install
restaurant_install

### recruiter_install
### TMP OFF -- version 1.7 has critical bugs and doesn't work properly

ubercart6_install
ubercart7_install
ubercart7_testing_install

### openacademy_install
### openblog_install
### openchurch1_install
### opendeals_install
### fserver_install

###---### Remove some unused core files.
#
if [ "${_DEBUG_MODE}" = "YES" ]; then
  echo " "
  msg "${_STATUS} C: Removing some unused core files..."
fi
if [[ "${_CORE}" =~ "/data/all/" ]]; then
  rm -rf ${_CORE}/*/scripts
  rm -f ${_CORE}/*{.make,.tar,.tar.gz,.zip}
fi
cd ${_CORE}


###---### Check platforms status.
#
if [ "${_RUN_VERIFY}" = "YES" ]; then
  msg "${_STATUS} C: Running Platforms Verify tasks, please wait..."
  touch /opt/tmp/status-AegirSetupC-runVerify
  save_verify_platforms
else
  if [ "${_DEBUG_MODE}" = "YES" ]; then
    msg "${_STATUS} C: No new Platforms installed this time"
  fi
fi

touch /opt/tmp/status-AegirSetupC-OK

###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2016 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###
