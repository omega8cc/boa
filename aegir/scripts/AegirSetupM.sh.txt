#!/bin/bash


###----------------------------------------###
###
###  Barracuda Aegir Installer
###
###  Copyright (C) 2010-2024 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: https://github.com/omega8cc/boa
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###


###
### Default variables
###
bldPth="/opt/tmp/boa"
filIncB="barracuda.sh.cnf"
libFnc="${bldPth}/lib/functions"
vBs="/var/backups"
tRee=pro
export tRee="${tRee}"


###
### Panic on missing include
###
panic_exit() {
  echo
  echo " EXIT: Required lib file not available?"
  echo " EXIT: $1"
  echo " EXIT: Cannot continue"
  echo " EXIT: Bye (0)"
  echo
  touch /opt/tmp/status-AegirSetupM-FAIL
  exit 1
}


###
### Include default settings and basic functions
###
[ -r "${vBs}/${filIncB}" ] || panic_exit "${vBs}/${filIncB}"
  source "${vBs}/${filIncB}"


###
### Include shared functions
###
_FL="helper master"
for f in ${_FL}; do
  [ -r "${libFnc}/${f}.sh.inc" ] || panic_exit "${f}"
  source "${libFnc}/${f}.sh.inc"
done


###
### Local settings
###
if [ "${_THIS_DB_HOST}" = "FQDN" ]; then
  _THIS_DB_HOST=$(uname -n 2>&1)
fi
if [ "${_PHP_CLI_VERSION}" = "8.3" ] \
  && [ -x "/opt/php83/bin/php" ]; then
  _T_CLI=/opt/php83/bin
elif [ "${_PHP_CLI_VERSION}" = "8.2" ] \
  && [ -x "/opt/php82/bin/php" ]; then
  _T_CLI=/opt/php82/bin
elif [ "${_PHP_CLI_VERSION}" = "8.1" ] \
  && [ -x "/opt/php81/bin/php" ]; then
  _T_CLI=/opt/php81/bin
elif [ "${_PHP_CLI_VERSION}" = "7.4" ] \
  && [ -x "/opt/php74/bin/php" ]; then
  _T_CLI=/opt/php74/bin
fi
_OSR=$(lsb_release -sc 2>&1)
_ROOT="${HOME}"
_DRUSHCMD="${_T_CLI}/php ${_ROOT}/drush/drush.php"
#
PATH=${_T_CLI}:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
SHELL=/bin/bash
#
crlGet="-L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab"
gCb="git clone --branch"
gitHub="https://github.com/omega8cc"
gitLab="https://gitlab.com/omega8cc"
#
urlDev="http://${_USE_MIR}/dev"
urlHmr="http://${_USE_MIR}/versions/${tRee}/boa/aegir"


###---### Local functions
#
#
# Update php-cli for Drush.
php_cli_drush_update() {
  if [ ! -z "${1}" ]; then
    _DRUSH_FILE="${_ROOT}/drush/${1}"
  else
    _DRUSH_FILE="${_ROOT}/drush/drush.php"
  fi
  if [ "${_PHP_CLI_VERSION}" = "8.3" ] \
    && [ -x "/opt/php83/bin/php" ]; then
    sed -i "s/^#\!\/.*/#\!\/opt\/php83\/bin\/php/g" \
      ${_DRUSH_FILE} &> /dev/null
  elif [ "${_PHP_CLI_VERSION}" = "8.2" ] \
    && [ -x "/opt/php82/bin/php" ]; then
    sed -i "s/^#\!\/.*/#\!\/opt\/php82\/bin\/php/g" \
      ${_DRUSH_FILE} &> /dev/null
  elif [ "${_PHP_CLI_VERSION}" = "8.1" ] \
    && [ -x "/opt/php81/bin/php" ]; then
    sed -i "s/^#\!\/.*/#\!\/opt\/php81\/bin\/php/g" \
      ${_DRUSH_FILE} &> /dev/null
  elif [ "${_PHP_CLI_VERSION}" = "7.4" ] \
    && [ -x "/opt/php74/bin/php" ]; then
    sed -i "s/^#\!\/.*/#\!\/opt\/php74\/bin\/php/g" \
      ${_DRUSH_FILE} &> /dev/null
  else
    msg "FATAL ERROR: _PHP_CLI_VERSION must be set to one of supported values"
    msg "FATAL ERROR: Aborting AegirSetupM installer NOW!"
    touch /opt/tmp/status-AegirSetupM-FAIL
    exit 1
  fi
}
#

###--------------------###

if [ `whoami` = "root" ]; then
  msg "FATAL ERROR: This script should be ran as a non-root user"
  msg "FATAL ERROR: Aborting AegirSetupM installer NOW!"
  touch /opt/tmp/status-AegirSetupM-FAIL
  exit 1
fi

msg "INFO: Installing drush in ${_ROOT}"
cd ${_ROOT}
get_dev_ext "drush-${_DRUSH_VERSION}.tar.gz"
cd ${_ROOT}/drush/
find ${_ROOT}/drush -type d -exec chmod 0755 {} \; &> /dev/null
find ${_ROOT}/drush -type f -exec chmod 0644 {} \; &> /dev/null
chmod 755 ${_ROOT}/drush/drush
chmod 755 ${_ROOT}/drush/drush.complete.sh
chmod 755 ${_ROOT}/drush/drush.launcher
chmod 755 ${_ROOT}/drush/drush.php
chmod 755 ${_ROOT}/drush/unish.sh
chmod 755 ${_ROOT}/drush/examples/drush.wrapper
chmod 755 ${_ROOT}/drush/examples/git-bisect.example.sh
chmod 755 ${_ROOT}/drush/examples/helloworld.script

_DRUSH_FILES="drush.php drush"
for df in ${_DRUSH_FILES}; do
  php_cli_drush_update "${df}"
done
php_cli_local_ini_update

if [ "${_DEBUG_MODE}" = "YES" ]; then
  msg "INFO: Installing Aegir Provision backend..."
fi
mkdir -p ${_ROOT}/.drush/{sys,xts,usr}
if [ "${_AEGIR_VERSION}" != "static" ]; then
  cd ${_ROOT}/.drush
  if [ "${_DEBUG_MODE}" = "YES" ]; then
    msg "INFO: Downloading Drush and Provision extensions..."
  fi
  rm -rf ${_ROOT}/.drush/{sys,xts,usr}
  rm -rf ${_ROOT}/.drush/{provision,drush_make}
  mkdir -p ${_ROOT}/.drush/{sys,xts,usr}
  rD="${_ROOT}/.drush"
  ${gCb} ${_BRANCH_PRN} ${gitHub}/provision.git \
    ${rD}/sys/provision &> /dev/null
  ${gCb} 7.x-1.x-dev ${gitHub}/drupalgeddon.git \
    ${rD}/usr/drupalgeddon &> /dev/null
  ${gCb} 7.x-1.x ${gitHub}/drush_ecl.git \
    ${rD}/usr/drush_ecl &> /dev/null
  ${gCb} 7.x-1.x ${gitHub}/security_review.git \
    ${rD}/xts/security_review &> /dev/null
  ${gCb} 7.x-2.x ${gitHub}/provision_boost.git \
    ${rD}/xts/provision_boost &> /dev/null
  ${gCb} 7.x-2.x ${gitHub}/registry_rebuild.git \
    ${rD}/usr/registry_rebuild &> /dev/null
  ${gCb} 7.x-1.x ${gitHub}/safe_cache_form_clear.git \
    ${rD}/usr/safe_cache_form_clear &> /dev/null
  rm -rf ${rD}/*/.git
  rm -rf ${rD}/*/*/.git
  cd ${rD}/usr
  get_dev_ext "clean_missing_modules.tar.gz"
  get_dev_ext "utf8mb4_convert-7.x-1.3.tar.gz"
else
  if [ "${_DEBUG_MODE}" = "YES" ]; then
    msg "INFO: Downloading Drush and Provision extensions..."
  fi
  cd ${_ROOT}/.drush/sys
  get_dev_ext "provision.tar.gz"
  cd ${_ROOT}/.drush/usr
  get_dev_ext "clean_missing_modules.tar.gz"
  get_dev_ext "drupalgeddon.tar.gz"
  get_dev_ext "drush_ecl.tar.gz"
  get_dev_ext "registry_rebuild.tar.gz"
  get_dev_ext "safe_cache_form_clear.tar.gz"
  get_dev_ext "utf8mb4_convert-7.x-1.3.tar.gz"
  cd ${_ROOT}/.drush/xts
  get_dev_ext "provision_boost.tar.gz"
  get_dev_ext "security_review.tar.gz"
fi

if ${_DRUSHCMD} help | grep "^ provision-install" > /dev/null ; then
  if [ "${_DEBUG_MODE}" = "YES" ]; then
    msg "INFO: Drush test result OK"
  fi
else
  msg "FATAL ERROR: Drush is broken (${_DRUSHCMD} help failed)"
  msg "FATAL ERROR: Aborting AegirSetupM installer NOW!"
  touch /opt/tmp/status-AegirSetupM-FAIL
  exit 1
fi

sed -i "s/files.aegir.cc/${_USE_MIR}/g" \
  ${_ROOT}/.drush/sys/provision/aegir.make &> /dev/null
wait

msg "INFO: Installing the frontend"
${_DRUSHCMD} cc drush >${_ROOT}/install.log 2>&1
rm -rf ${_ROOT}/.tmp/cache
_HM_ROOT="${_ROOT}/hostmaster-${_AEGIR_VERSION}"

${_DRUSHCMD} hostmaster-install \
  --aegir_host=${_AEGIR_HOST} \
  --aegir_db_user=${_AEGIR_DB_USER} \
  --aegir_db_pass=${_ESC_PASS} \
  --aegir_root=${_ROOT} \
  --root=${_HM_ROOT} \
  --version=${_AEGIR_VERSION} $@

mkdir -p /var/aegir/backups/system
chmod 700 /var/aegir/backups/system
_L_SYS="/var/aegir/backups/system/.${_AEGIR_DB_USER}.pass.txt"
echo "${_ESC_PASS}" > ${_L_SYS}
chmod 0600 ${_L_SYS}

###----------------------------------------###
###
###  Barracuda Aegir Installer
###  Copyright (C) 2010-2024 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###
