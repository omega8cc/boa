#!/bin/bash

export PATH=$PATH:/opt/local/bin
_ALL="$@"
### echo _ALL is ${_ALL}
_ARR=
if [[ "${_ALL}" =~ "true COLUMNS=" ]]; then
  if [[ "${_ALL}" =~ "-c set -m" ]]; then
    _R_M=`echo -n ${_ALL} | grep -o "\-c set -m\; true COLUMNS=[0-9]\+ drush"`
  else
    _R_M=`echo -n ${_ALL} | grep -o "\-c true COLUMNS=[0-9]\+ drush"`
  fi
  ### echo _R_M is $_R_M
  _CLR=`echo ${_ALL} | sed "s/\$_R_M//g"`
  _ARR=() # the buffer array for filtered parameters
  for arg in "${_CLR}"; do
    case $_R_M in
      $arg\ * | *\ $arg | *\ $arg\ *) ;;
      *) _ARR+=("$arg") ;;
    esac
  done
  ### echo _ARR is ${_ARR}
fi
_INTERNAL=NO
_LTD_GID=$(id -nG ${USER} 2>&1)
_LTD_UID=$(id -nu ${USER} 2>&1)
if [ -z "${USER}" ]; then
  USER=$(id -nu ${USER} 2>&1)
  _LTD_QQQ=YES
fi
_X_USR=".*"
if [ "${USER}" = "aegir" ] \
  || [ "${HOME}" = "/var/aegir" ]; then
  _Y_USR=aegir
else
  _Y_USR=${USER%${_X_USR}}
fi
if [ -z "${HOME}" ]; then
  if [ -d "/home/${USER}/.tmp" ]; then
    HOME="/home/${USER}"
  elif [ -d "/data/disk/${_Y_USR}/.tmp" ]; then
    HOME="/data/disk/${_Y_USR}"
  elif [ -d "/var/${_Y_USR}/.tmp" ]; then
    HOME="/var/${_Y_USR}"
  fi
fi
if [ "$1" = "-c" ]; then
  _ARGS="$2"
else
  _ARGS="$1"
fi

if [[ "${_ARGS}" =~ "true COLUMNS=" ]]; then
  _R_M=`echo -n "${_ARGS}" | grep -o "true COLUMNS=[0-9]\+ "`
  _ARGS=`echo ${_ARGS} | sed "s/\$_R_M//g"`
fi

if [ -d "/home/${USER}/.tmp" ]; then
  export TMP="/home/${USER}/.tmp"
  export TMPDIR="/home/${USER}/.tmp"
  export TEMP="/home/${USER}/.tmp"
  if [[ "${_ARGS}" =~ " id " ]] \
    || [[ "${_ARGS}" =~ (^)"id " ]]; then
    exit 1
  elif [[ "${_ARGS}" =~ (^)"newrelic" ]] \
    || [[ "${_ARGS}" =~ (^)"nrsysm" ]]; then
    exit 1
  fi
elif [ -d "/data/disk/${_Y_USR}/.tmp" ]; then
  export TMP="/data/disk/${_Y_USR}/.tmp"
  export TMPDIR="/data/disk/${_Y_USR}/.tmp"
  export TEMP="/data/disk/${_Y_USR}/.tmp"
elif [ -d "/var/${_Y_USR}/.tmp" ]; then
  export TMP="/var/${_Y_USR}/.tmp"
  export TMPDIR="/var/${_Y_USR}/.tmp"
  export TEMP="/var/${_Y_USR}/.tmp"
else
  export TMP="/tmp"
  export TMPDIR="/tmp"
  export TEMP="/tmp"
fi

# echo HOME is ${HOME}
# echo TEMP is ${TEMP}
# echo USER is ${USER}
#
# echo _ALL is ${_ALL}
# echo _ARGS is ${_ARGS}
# echo _LTD_GID is ${_LTD_GID}
# echo _LTD_QQQ is ${_LTD_QQQ}
# echo _LTD_UID is ${_LTD_UID}
# echo _Y_USR is ${_Y_USR}
#
# echo 0 is $0
# echo 1 is $1
# echo 2 is $2
# echo 3 is $3
# echo 4 is $4
# echo 5 is $5
# echo 6 is $6
# echo 7 is $7
# echo 8 is $8
# echo 9 is $9

# Check PHP CLI version defined.
check_php_cli_version() {
  if [ "${HOME}" = "/var/aegir" ]; then
    _PHP_CLI=$(grep "/opt/php" /var/aegir/drush/drush.php 2>&1)
  elif [[ "${HOME}" =~ "/data/disk/" ]]; then
    _PHP_CLI=$(grep "/opt/php" /data/disk/${_Y_USR}/tools/drush/drush.php 2>&1)
  else
    if [ -f "/data/disk/${_Y_USR}/tools/drush/drush.php" ]; then
      _PHP_CLI=$(grep "/opt/php" /data/disk/${_Y_USR}/tools/drush/drush.php 2>&1)
    fi
  fi
  if [[ "${_PHP_CLI}" =~ "php70" ]]; then
    DRUSH_PHP="/opt/php70/bin/php"
    PHP_INI="/opt/php70/lib/php.ini"
  elif [[ "${_PHP_CLI}" =~ "php56" ]]; then
    DRUSH_PHP="/opt/php56/bin/php"
    PHP_INI="/opt/php56/lib/php.ini"
  elif [[ "${_PHP_CLI}" =~ "php55" ]]; then
    DRUSH_PHP="/opt/php55/bin/php"
    PHP_INI="/opt/php55/lib/php.ini"
  elif [[ "${_PHP_CLI}" =~ "php54" ]]; then
    DRUSH_PHP="/opt/php54/bin/php"
    PHP_INI="/opt/php54/lib/php.ini"
  elif [[ "${_PHP_CLI}" =~ "php53" ]]; then
    DRUSH_PHP="/opt/php53/bin/php"
    PHP_INI="/opt/php53/lib/php.ini"
  else
    DRUSH_PHP=""
    PHP_INI=""
  fi
  if [ ! -z "${PHP_OPTIONS}" ] && [ -f "${HOME}/.drush/rphp.ini" ]; then
    PHP_INI="${HOME}/.drush/rphp.ini"
    # echo 1 PHP_OPTIONS is ${PHP_OPTIONS}
  fi
}

if [ "${_LTD_GID}" = "www-data users" ] \
  || [[ "${HOME}" =~ (^)"/var/aegir" ]] \
  || [[ "${HOME}" =~ (^)"/data/disk/" ]] \
  || [[ "${_LTD_GID}" =~ "lshellg"($) ]] \
  || [[ "${_LTD_GID}" =~ "ltd-shell"($) ]] \
  || [[ "${_LTD_GID}" =~ (^)"users www-data"($) ]] \
  || [[ "${_LTD_GID}" =~ (^)"aegir www-data users"($) ]]; then
  if [ "$1" = "-c" ]; then
    if [[ "$2" =~ "set -m;" ]] && [ "$0" = "/bin/sh" ]; then
      _IN_PATH=YES
      _INTERNAL=YES
      if [[ "${_ALL}" =~ "drush" ]]; then
        _PWD=$(pwd 2>&1)
        check_php_cli_version
        if [[ "$2" =~ "pm-update" ]]; then
          DRUSH_PHP=""
          _PHP_DEFAULT=$(/usr/bin/php-cli -v | grep 'PHP 5' \
            | cut -d: -f1 | awk '{ print $2}' 2>&1)
          if [ -z "${_PHP_DEFAULT}" ]; then
            _PHP_DEFAULT=$(/usr/bin/php-cli -v | grep 'PHP 7' \
              | cut -d: -f1 | awk '{ print $2}' 2>&1)
          fi
          if [[ "${_PHP_DEFAULT}" =~ "7.0." ]]; then
            PHP_INI="/opt/php70/lib/php.ini"
          elif [[ "${_PHP_DEFAULT}" =~ "5.6." ]]; then
            PHP_INI="/opt/php56/lib/php.ini"
          elif [[ "${_PHP_DEFAULT}" =~ "5.5." ]]; then
            PHP_INI="/opt/php55/lib/php.ini"
          elif [[ "${_PHP_DEFAULT}" =~ "5.4." ]]; then
            PHP_INI="/opt/php54/lib/php.ini"
          elif [[ "${_PHP_DEFAULT}" =~ "5.3." ]]; then
            PHP_INI="/opt/php53/lib/php.ini"
          fi
        else
          if [ -f "${HOME}/.drush/php.ini" ]; then
            PHP_INI="${HOME}/.drush/php.ini"
          fi
          if [ ! -z "${PHP_OPTIONS}" ] \
            && [ -f "${HOME}/.drush/rphp.ini" ]; then
            PHP_INI="${HOME}/.drush/rphp.ini"
            # echo 2 PHP_OPTIONS is ${PHP_OPTIONS}
          fi
        fi
        # echo 1 DRUSH_PHP is ${DRUSH_PHP}
        # echo 1 PHP_INI is ${PHP_INI}
        if [[ "${_ALL}" =~ "drush make" ]] \
          || [[ "${_ALL}" =~ "drush7 make" ]] \
          || [[ "${_ALL}" =~ "drush8 make" ]] \
          || [[ "${_ALL}" =~ "drush cc drush" ]] \
          || [[ "${_ALL}" =~ "drush7 cc drush" ]] \
          || [[ "${_ALL}" =~ "drush8 cc drush" ]]; then
          if [[ "${_PWD}" =~ "/static" ]] \
            || [[ "${_ALL}" =~ "drush cc drush" ]] \
            || [[ "${_ALL}" =~ "drush7 cc drush" ]] \
            || [[ "${_ALL}" =~ "drush8 cc drush" ]]; then
            _CORRECT=YES
          else
            if [[ "${_ALL}" =~ "make-generate" ]] \
              && [ -f "${_PWD}/settings.php" ]; then
              _CORRECT=YES
            else
              echo
              echo " This drush command can not be run in ${_PWD}"
              if [[ "$2" =~ "make-generate" ]]; then
                echo " Please cd to the valid sites/foo.com directory first"
                echo " or use a valid @alias, like: drush @foo.com status"
                echo " Hint: Use 'drush aliases' to display all aliases"
              else
                echo " Please cd ~/static first"
              fi
              echo
              exit 0
            fi
          fi
        else
          if [[ "${_ALL}" =~ "drush @" ]] \
            || [[ "${_ALL}" =~ "drush7 @" ]] \
            || [[ "${_ALL}" =~ "drush8 @" ]]; then
            if [[ "$3" =~ "restore"($) ]] \
              || [[ "$3" =~ "arr"($) ]] \
              || [[ "$3" =~ "cli"($) ]] \
              || [[ "$3" =~ "conf"($) ]] \
              || [[ "$3" =~ "config"($) ]] \
              || [[ "$3" =~ "execute"($) ]] \
              || [[ "$3" =~ "core-quick-drupal"($) ]] \
              || [[ "$3" =~ "exec"($) ]] \
              || [[ "$3" =~ "xstatus"($) ]] \
              || [[ "$3" =~ "redis-flush"($) ]] \
              || [[ "$3" =~ (^)"qd"($) ]] \
              || [[ "$3" =~ (^)"rs"($) ]] \
              || [[ "$3" =~ "runserver"($) ]] \
              || [[ "$3" =~ (^)"scr"($) ]] \
              || [[ "$3" =~ (^)"sha"($) ]] \
              || [[ "$3" =~ "shell-alias"($) ]] \
              || [[ "$3" =~ (^)"si"($) ]] \
              || [[ "$3" =~ "sql-create"($) ]] \
              || [[ "$3" =~ (^)"ssh"($) ]] \
              || [[ "$3" =~ (^)"sup"($) ]]; then
              echo
              echo " This drush command is not available (A)"
              echo
              exit 0
            else
              _CORRECT=YES
            fi
          elif [[ "${_ALL}" =~ "cc drush" ]] \
            || [[ "${_ALL}" =~ "drush7 site-alias" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush7 --version" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush7 help" ]] \
            || [[ "${_ALL}" =~ "drush7 dl" ]] \
            || [[ "${_ALL}" =~ "drush7 pm-download" ]] \
            || [[ "${_ALL}" =~ "drush7 sa" ]] \
            || [[ "${_ALL}" =~ "drush8 site-alias" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush8 --version" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush8 help" ]] \
            || [[ "${_ALL}" =~ "drush8 dl" ]] \
            || [[ "${_ALL}" =~ "drush8 pm-download" ]] \
            || [[ "${_ALL}" =~ "drush8 sa" ]] \
            || [[ "${_ALL}" =~ "drush site-alias" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush --version" ]] \
            || [[ "${_ALL}" =~ "-c set -m; drush help" ]] \
            || [[ "${_ALL}" =~ "drush dl" ]] \
            || [[ "${_ALL}" =~ "drush pm-download" ]] \
            || [[ "${_ALL}" =~ "drush sa" ]]; then
            _CORRECT=YES
          else
            if [[ "${_ALL}" =~ "-c set -m; drush" ]] \
              && [ ! -f "${_PWD}/settings.php" ]; then
              echo
              echo " This drush command can not be run in ${_PWD}"
              echo " Please cd to the valid sites/foo.com directory first"
              echo " or use a valid @alias, like: drush @foo.com status"
              echo " Hint: Use 'drush aliases' to display all aliases"
              echo
              exit 0
            elif [[ "${_ALL}" =~ "drush" ]] && [ -f "${_PWD}/settings.php" ]; then
              _CORRECT=YES
            fi
          fi
        fi
      fi
    else
      if [[ "${_ALL}" =~ "drush @" ]] \
        || [[ "${_ALL}" =~ "drush7 @" ]] \
        || [[ "${_ALL}" =~ "drush8 @" ]]; then
        if [[ "$3" =~ "restore"($) ]] \
          || [[ "$3" =~ "arr"($) ]] \
          || [[ "$3" =~ "cli"($) ]] \
          || [[ "$3" =~ "conf"($) ]] \
          || [[ "$3" =~ "config"($) ]] \
          || [[ "$3" =~ "execute"($) ]] \
          || [[ "$3" =~ "core-quick-drupal"($) ]] \
          || [[ "$3" =~ "exec"($) ]] \
          || [[ "$3" =~ "xstatus"($) ]] \
          || [[ "$3" =~ "redis-flush"($) ]] \
          || [[ "$3" =~ (^)"qd"($) ]] \
          || [[ "$3" =~ (^)"rs"($) ]] \
          || [[ "$3" =~ "runserver"($) ]] \
          || [[ "$3" =~ (^)"scr"($) ]] \
          || [[ "$3" =~ (^)"sha"($) ]] \
          || [[ "$3" =~ "shell-alias"($) ]] \
          || [[ "$3" =~ (^)"si"($) ]] \
          || [[ "$3" =~ "sql-create"($) ]] \
          || [[ "$3" =~ (^)"ssh"($) ]] \
          || [[ "$3" =~ (^)"sup"($) ]]; then
          echo
          echo " This drush command is not available (B)"
          echo
          exit 0
        fi
      fi
      _RAW_IN_PATH=${2//[^a-z/]/}
      if [[ "$2" =~ (^)"/usr/" ]] \
        || [[ "$2" =~ (^)"/bin/" ]] \
        || [[ "$2" =~ (^)"/opt/" ]]; then
        _IN_PATH=YES
      elif [[ "$2" =~ (^)"/data/disk/${_Y_USR}/tools/drush/drush.php" ]]; then
        _IN_PATH=YES
      elif [[ "$2" =~ (^)"(/data/disk/${_Y_USR}/tools/drush/drush.php" ]]; then
        _IN_PATH=YES
      elif [[ "$2" =~ (^)"/var/${_Y_USR}/drush/drush.php" ]]; then
        _IN_PATH=YES
      elif [[ "$2" =~ (^)"(/var/${_Y_USR}/drush/drush.php" ]]; then
        _IN_PATH=YES
      elif [[ "${_RAW_IN_PATH}" =~ "/usr/bin/wkhtmltopdf" ]]; then
        _IN_PATH=YES
      elif [[ "${_RAW_IN_PATH}" =~ "/usr/bin/wkhtmltoimage" ]]; then
        _IN_PATH=YES
      elif [[ "${_RAW_IN_PATH}" =~ "/usr/bin/convert" ]]; then
        _IN_PATH=YES
      elif [[ "${_RAW_IN_PATH}" =~ "/usr/bin/gs" ]]; then
        _IN_PATH=YES
      elif [[ "$2" =~ (^)"/home/" ]] \
        || [[ "$2" =~ (^)"/data/" ]] \
        || [[ "$2" =~ (^)"/tmp/" ]]; then
        if [ -e "$2" ]; then
          _IN_PATH=NO
        fi
      else
        _WHICH_TEST=$(which $2 2>&1)
        if [[ "${_WHICH_TEST}" =~ (^)"/usr/" ]] \
          || [[ "${_WHICH_TEST}" =~ (^)"/bin/" ]] \
          || [[ "${_WHICH_TEST}" =~ (^)"/opt/" ]]; then
          _IN_PATH=YES
        else
          _IN_PATH=NO
        fi
      fi
    fi
  else
    if [[ "${_ALL}" =~ "drush @" ]] \
      || [[ "${_ALL}" =~ "drush7 @" ]] \
      || [[ "${_ALL}" =~ "drush8 @" ]]; then
      if [[ "$3" =~ "restore"($) ]] \
        || [[ "$3" =~ "arr"($) ]] \
        || [[ "$3" =~ "cli"($) ]] \
        || [[ "$3" =~ "conf"($) ]] \
        || [[ "$3" =~ "config"($) ]] \
        || [[ "$3" =~ "execute"($) ]] \
        || [[ "$3" =~ "core-quick-drupal"($) ]] \
        || [[ "$3" =~ "exec"($) ]] \
        || [[ "$3" =~ "xstatus"($) ]] \
        || [[ "$3" =~ "redis-flush"($) ]] \
        || [[ "$3" =~ (^)"qd"($) ]] \
        || [[ "$3" =~ (^)"rs"($) ]] \
        || [[ "$3" =~ "runserver"($) ]] \
        || [[ "$3" =~ (^)"scr"($) ]] \
        || [[ "$3" =~ (^)"sha"($) ]] \
        || [[ "$3" =~ "shell-alias"($) ]] \
        || [[ "$3" =~ (^)"si"($) ]] \
        || [[ "$3" =~ "sql-create"($) ]] \
        || [[ "$3" =~ (^)"ssh"($) ]] \
        || [[ "$3" =~ (^)"sup"($) ]]; then
        echo
        echo " This drush command is not available (C)"
        echo
        exit 0
      fi
    fi
    if [[ "$1" =~ (^)"/usr/" ]] \
      || [[ "$1" =~ (^)"/bin/" ]] \
      || [[ "$1" =~ (^)"/opt/" ]]; then
      _IN_PATH=YES
      if [ -z "${PHP_INI}" ] && [[ "$1" =~ "drush" ]]; then
        check_php_cli_version
        if [ -f "${HOME}/.drush/php.ini" ]; then
          PHP_INI="${HOME}/.drush/php.ini"
        fi
        if [ ! -z "${PHP_OPTIONS}" ] && [ -f "${HOME}/.drush/rphp.ini" ]; then
          PHP_INI="${HOME}/.drush/rphp.ini"
          # echo 3 PHP_OPTIONS is ${PHP_OPTIONS}
        fi
        # echo 2 DRUSH_PHP is ${DRUSH_PHP}
        # echo 2 PHP_INI is ${PHP_INI}
      fi
    elif [[ "$1" =~ (^)"/data/disk/${_Y_USR}/tools/drush/drush.php" ]]; then
      _IN_PATH=YES
    elif [[ "$1" =~ (^)"(/data/disk/${_Y_USR}/tools/drush/drush.php" ]]; then
      _IN_PATH=YES
    elif [[ "$1" =~ (^)"/var/${_Y_USR}/drush/drush.php" ]]; then
      _IN_PATH=YES
    elif [[ "$1" =~ (^)"(/var/${_Y_USR}/drush/drush.php" ]]; then
      _IN_PATH=YES
    elif [[ "$1" =~ (^)"/home/" ]] \
      || [[ "$1" =~ (^)"/data/" ]] \
      || [[ "$1" =~ (^)"/tmp/" ]]; then
      if [ -e "$1" ]; then
        _IN_PATH=NO
      fi
    else
      _WHICH_TEST=$(which $1 2>&1)
      if [[ "${_WHICH_TEST}" =~ (^)"/usr/" ]] \
        || [[ "${_WHICH_TEST}" =~ (^)"/bin/" ]] \
        || [[ "${_WHICH_TEST}" =~ (^)"/opt/" ]]; then
        _IN_PATH=YES
        if [ -z "${PHP_INI}" ] && [[ "$1" =~ "drush" ]]; then
          check_php_cli_version
          if [ -f "${HOME}/.drush/php.ini" ]; then
            PHP_INI="${HOME}/.drush/php.ini"
          fi
          if [ ! -z "${PHP_OPTIONS}" ] && [ -f "${HOME}/.drush/rphp.ini" ]; then
            PHP_INI="${HOME}/.drush/rphp.ini"
            # echo 4 PHP_OPTIONS is ${PHP_OPTIONS}
          fi
          # echo 3 DRUSH_PHP is ${DRUSH_PHP}
          # echo 3 PHP_INI is ${PHP_INI}
        fi
      else
        _IN_PATH=NO
      fi
    fi
  fi
  if [[ "${_LTD_GID}" =~ "lshellg"($) ]] \
    || [[ "${_LTD_GID}" =~ "ltd-shell"($) ]]; then
    if [[ "${_ALL}" =~ "*" ]]; then
      if [[ "${_ALL}" =~ "-c set -m; " ]]; then
        _SILENT=YES
      else
        if [[ "${_ALL}" =~ "__build__" ]] \
          || [[ "${_ALL}" =~ "_tmp_" ]] \
          || [[ "${_ALL}" =~ ".tmp" ]] \
          || [[ "${_ALL}" =~ "avconv" ]] \
          || [[ "${_ALL}" =~ "bzr " ]] \
          || [[ "${_ALL}" =~ "chdir" ]] \
          || [[ "${_ALL}" =~ "compass" ]] \
          || [[ "${_ALL}" =~ "convert" ]] \
          || [[ "${_ALL}" =~ "curl " ]] \
          || [[ "${_ALL}" =~ "drush" ]] \
          || [[ "${_ALL}" =~ "ffmpeg" ]] \
          || [[ "${_ALL}" =~ "flvtool" ]] \
          || [[ "${_ALL}" =~ "git" ]] \
          || [[ "${_ALL}" =~ "is_" ]] \
          || [[ "${_ALL}" =~ "java" ]] \
          || [[ "${_ALL}" =~ "logger" ]] \
          || [[ "${_ALL}" =~ "php " ]] \
          || [[ "${_ALL}" =~ "rename" ]] \
          || [[ "${_ALL}" =~ "rrdtool" ]] \
          || [[ "${_ALL}" =~ "rsync" ]] \
          || [[ "${_ALL}" =~ "sass" ]] \
          || [[ "${_ALL}" =~ "scp" ]] \
          || [[ "${_ALL}" =~ "scss" ]] \
          || [[ "${_ALL}" =~ "sendmail" ]] \
          || [[ "${_ALL}" =~ "ssh" ]] \
          || [[ "${_ALL}" =~ "svn " ]] \
          || [[ "${_ALL}" =~ "tar " ]] \
          || [[ "${_ALL}" =~ "wget " ]] \
          || [[ "${_ALL}" =~ "wkhtmltoimage" ]] \
          || [[ "${_ALL}" =~ "wkhtmltopdf" ]]; then
          _SILENT=YES
        else
          echo
        fi
      fi
    fi
  fi
  if [ "${_IN_PATH}" = "YES" ]; then
    if [ -x "/home/${USER}/.rvm/bin/rvm" ]; then
      if [[ "${_ALL}" =~ "-c set -m; " ]] || [ ! -z "${SSH_CLIENT}" ]; then
        _RUBY_ALLOW=YES
      fi
    fi
    if [ "${_RUBY_ALLOW}" = "YES" ]; then
      _THIS_RV=$(lsb_release -sc 2>&1)
      if [ "${_THIS_RV}" = "jessie" ] \
        || [ "${_THIS_RV}" = "wheezy" ] \
        || [ "${_THIS_RV}" = "trusty" ] \
        || [ "${_THIS_RV}" = "precise" ]; then
        _DETECTED_RUBY_VP=$(grep 'RUBY_VERSION' \
          /home/${USER}/.rvm/environments/default \
          | cut -d= -f2 \
          | awk '{ print $1}' \
          | sed "s/'//g" \
          | sed "s/ruby-//g" 2>&1)
        if [ ! -z "${_DETECTED_RUBY_VP}" ] \
          && [ -e "/home/${USER}/.rvm/gems/ruby-${_DETECTED_RUBY_VP}" ]; then
          _RUBY_VP="${_DETECTED_RUBY_VP}"
        else
          _RUBY_VP=2.3.1
        fi
      else
        _DETECTED_RUBY_VP=$(grep 'RUBY_VERSION' \
          /home/${USER}/.rvm/environments/default \
          | cut -d= -f2 \
          | awk '{ print $1}' \
          | sed "s/'//g" \
          | sed "s/ruby-//g" 2>&1)
        if [ ! -z "${_DETECTED_RUBY_VP}" ] \
          && [ -e "/home/${USER}/.rvm/gems/ruby-${_DETECTED_RUBY_VP}" ]; then
          _RUBY_VP="${_DETECTED_RUBY_VP}"
        else
          _RUBY_VP=2.0.0-p648
        fi
      fi
      _SP_A="/home/${USER}/.rvm/gems/ruby-${_RUBY_VP}/bin"
      _SP_B="/home/${USER}/.rvm/gems/ruby-${_RUBY_VP}@global/bin"
      _SP_C="/home/${USER}/.rvm/rubies/ruby-${_RUBY_VP}/bin"
      _SP_D="/home/${USER}/.rvm/bin"
      export PATH="${_SP_A}:${_SP_B}:${_SP_C}:${_SP_D}:${PATH}"
      export GEM_HOME="/home/${USER}/.rvm/gems/ruby-${_RUBY_VP}"
      _GP_A="/home/${USER}/.rvm/gems/ruby-${_RUBY_VP}"
      _GP_B="/home/${USER}/.rvm/gems/ruby-${_RUBY_VP}@global"
      export GEM_PATH="${_GP_A}:${_GP_B}"
      export MY_RUBY_HOME="/home/${USER}/.rvm/rubies/ruby-${_RUBY_VP}"
      export IRBRC="/home/${USER}/.rvm/rubies/ruby-${_RUBY_VP}/.irbrc"
      unset MAGLEV_HOME
      unset RBXOPT
      export RUBY_VERSION="ruby-${_RUBY_VP}"
    fi
    if [ "$0" = "/bin/sh" ] || [ "$0" = "/bin/websh" ]; then
      if [ -x "/bin/dash" ]; then
        if [ ! -z "${_ARR}" ]; then
          export DRUSH_PHP;export PHP_INI;exec drush ${_ARR}
        else
          export DRUSH_PHP;export PHP_INI;exec /bin/dash "$@"
        fi
      else
        if [ ! -z "${_ARR}" ]; then
          export DRUSH_PHP;export PHP_INI;exec drush ${_ARR}
        else
          export DRUSH_PHP;export PHP_INI;exec /bin/bash "$@"
        fi
      fi
    else
      if [ ! -z "${_ARR}" ]; then
        export DRUSH_PHP;export PHP_INI;exec drush ${_ARR}
      else
        export DRUSH_PHP;export PHP_INI;exec $0 "$@"
      fi
    fi
    exit 0
  else
    exit 1
  fi
else
  if [ "${USER}" = "root" ]; then
    if [[ "$1" =~ "drush" ]] \
      || [[ "$2" =~ "drush" ]]; then
      if [[ "$2" =~ "uli" ]] \
        || [[ "$2" =~ "vget" ]] \
        || [[ "$2" =~ "--version" ]] \
        || [[ "$2" =~ "vset" ]] \
        || [[ "$2" =~ "status" ]]; then
        _ALLOW=YES
      else
        echo
        echo " Drush should never be run as root!"
        echo " Please su to some non-root account"
        echo
        exit 0
      fi
    fi
  fi
  check_php_cli_version
  if [ -f "${HOME}/.drush/php.ini" ]; then
    PHP_INI="${HOME}/.drush/php.ini"
  fi
  if [ ! -z "${PHP_OPTIONS}" ] && [ -f "${HOME}/.drush/rphp.ini" ]; then
    PHP_INI="${HOME}/.drush/rphp.ini"
    # echo 5 PHP_OPTIONS is ${PHP_OPTIONS}
  fi
  # echo 4 DRUSH_PHP is ${DRUSH_PHP}
  # echo 4 PHP_INI is ${PHP_INI}
  if [ "$0" = "/bin/sh" ] || [ "$0" = "/bin/websh" ]; then
    if [ -x "/bin/dash" ]; then
      export DRUSH_PHP;export PHP_INI;exec /bin/dash "$@"
    else
      export DRUSH_PHP;export PHP_INI;exec /bin/bash "$@"
    fi
  else
    export DRUSH_PHP;export PHP_INI;exec $0 "$@"
  fi
  exit 0
fi
