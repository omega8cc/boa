#!/bin/bash

HOME=/root
SHELL=/bin/bash
PATH=/usr/local/bin:/usr/local/sbin:/opt/local/bin:/usr/bin:/usr/sbin:/bin:/sbin

export PATH=${PATH}
export SHELL=${SHELL}
export HOME=${HOME}

check_root() {
  if [ `whoami` != "root" ]; then
    echo "ERROR: This script should be ran as a root user"
    exit 1
  fi
}
check_root

if [ -e "/root/.pause_tasks_maint.cnf" ]; then
  exit 0
fi

maxEtime="300"
cmndsList="apt-get apt"

licence_to_kill() {
  if [[ "${1}" =~ "apt-get" ]]; then
    killCmnd="apt-get update"
    maxEtime="99"
  elif [[ "${1}" =~ "apt" ]]; then
    killCmnd="apt update"
    maxEtime="99"
  fi
  aptTms=$(ps -eo uid,pid,etimes,cmd | grep -v "grep" | grep "${killCmnd}" | egrep ' ([0-9]+-)?([0-9]{1}:?){3}' | awk '{print $3}')
  aptPid=$(ps -eo uid,pid,etimes,cmd | grep -v "grep" | grep "${killCmnd}" | egrep ' ([0-9]+-)?([0-9]{1}:?){3}' | awk '{print $2}')
  if [ ! -z "${aptTms}" ] && [ "${aptTms}" -gt "${maxEtime}" ]; then
    echo "REASON aptTms for ${killCmnd} was ${aptTms} on $(date 2>&1)" >> /root/.proc.forced.kill.exceptions.log
    kill -9 ${aptPid}
  fi
}

[ -e "/var/lib/man-db/auto-update" ] && rm -f /var/lib/man-db/auto-update

for frozenCmnd in ${cmndsList}; do
  licence_to_kill ${cmndsList}
done

exit 0
