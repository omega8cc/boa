# lshell.py configuration file
#
# $Id: lshell.conf,v 1.27 2010-10-18 19:05:17 ghantoos Exp $

[global]
##  log directory (default /var/log/lshell/ )
logpath         : /var/log/lsh/
##  set log level to 0, 1, 2, 3 or 4  (0: no logs, 1: least verbose,
##                                                 4: log all commands)
loglevel        : 4
##  configure log file name (default is %u i.e. username.log)
#logfilename     : %y%m%d-%u
#logfilename     : syslog

##  in case you are using syslog, you can choose your logname
#syslogname      : myapp

##  Set path to sudo noexec library. This path is usually autodetected, only
##  set this variable to use alternate path. If set and the shared object is
##  not found, lshell will exit immediately. Otherwise, please check your logs
##  to verify that a standard path is detected.
##
##  while this should not be a common practice, setting this variable to an empty
##  string will disable LD_PRELOAD prepend of the commands. This is done at your
##  own risk, as lshell becomes easily breached using some commands like find(1)
##  using the -exec flag.
#path_noexec     : /usr/libexec/sudo_noexec.so

## include a directory containing multiple configuration files. These files
## can only contain default/user/group configuration. The global configuration will
## only be loaded from the default configuration file.
## e.g. splitting users into separate files
#include_dir     : /etc/lshell.d/*.conf

[default]
##  a list of the allowed commands without execution privileges or 'all' to
##  allow all commands in user's PATH
##
##  if  sudo(8) is installed and sudo_noexec.so is available, it will be loaded
##  before running every command, preventing it from  running  further  commands
##  itself. If not available, beware of commands like vim/find/more/etc. that
##  will allow users to execute code (e.g. /bin/sh) from within the application,
##  thus easily escaping lshell. See variable 'path_noexec' to use an alternative
##  path to library.
allowed         : ['bower', 'bundle', 'bzr', 'cat', 'cd', 'chmod', 'compass', 'composer', 'cp', 'curl', 'cvs', 'diff', 'drush', 'drush8', 'drush10', 'drush11', 'vdrush', 'vendor/bin/drush', 'echo', 'env', 'find', 'gem-dependency', 'gem-environment', 'gem-list', 'gem-query', 'gem-search', 'git-receive-pack', 'git-upload-archive', 'git-upload-pack', 'git', 'grep', 'grunt', 'guard', 'gulp', 'bzip2', 'gunzip', 'gzip', 'less', 'lftp', 'll', 'ls', 'mc', 'du', 'mkdir', 'mv', 'mysql', 'mydumper', 'myloader', 'mysqldump', 'nano', 'node', 'npm', 'npx', 'openssl', 'passwd', 'patch', 'ping', 'pwd', 'rm', 'rmdir', 'rsync', 'gem', 's4cmd', 'sass-convert', 'sass', 'scp', 'scss', 'sed', 'sqlmagic', 'ssh-keygen', 'ssh', 'svn', 'tar', 'touch', 'true', 'unzip', 'vi', 'vim', 'wget', '1']

##  A list of the allowed commands that are permitted to execute other
##  programs (e.g. shell scripts with exec(3)). Setting this variable to 'all'
##  is NOT allowed. Warning do not put here any command that can execute
##  arbitrary commands (e.g. find, vim, xargs)
##
##  Important: commands defined in 'allowed_shell_escape' override their
##  definition in the 'allowed' variable
allowed_shell_escape          : ['bower', 'bundle', 'compass', 'composer', 'curl', 'drush', 'drush8', 'drush10', 'drush11', 'vdrush', 'vendor/bin/drush', 'env', 'gem-dependency', 'gem-environment', 'gem-list', 'gem-query', 'gem-search', 'git-receive-pack', 'git-upload-archive', 'git-upload-pack', 'git', 'guard', 'grunt', 'gulp', 'bzip2', 'gunzip', 'gzip', 'mysql', 'mysqldump', 'node', 'npm', 'npx', 'rsync', 'gem', 'sass-convert', 'sass', 'scss', 'sqlmagic', 'ssh', 'tar', 'true', 'unzip', '1']

##  a list of forbidden character or commands
forbidden       : [';', '`', '$(', '${', '&&', '--alias-path', '--use-existing', 'core-cli', 'drush archive-restore', 'drush arr', 'drush php', 'drush core-config', 'drush core-execute', 'drush core-quick-drupal', 'drush ev', 'drush exec', 'drush qd', 'drush rs', 'drush runserver', 'drush scr', 'drush sha', 'drush shell-alias', 'drush si', 'drush site-ssh', 'drush sql-create', 'drush ssh', 'drush sup', 'drush8 archive-restore', 'drush8 arr', 'drush8 php', 'drush8 core-config', 'drush8 core-execute', 'drush8 core-quick-drupal', 'drush8 ev', 'drush8 exec', 'drush8 qd', 'drush8 rs', 'drush8 runserver', 'drush8 scr', 'drush8 sha', 'drush8 shell-alias', 'drush8 si', 'drush8 site-ssh', 'drush8 sql-create', 'drush8 ssh', 'drush8 sup', 'drush10 archive-restore', 'drush10 arr', 'drush10 php', 'drush10 core-config', 'drush10 core-execute', 'drush10 core-quick-drupal', 'drush10 ev', 'drush10 exec', 'drush10 qd', 'drush10 rs', 'drush10 runserver', 'drush10 scr', 'drush10 sha', 'drush10 shell-alias', 'drush10 si', 'drush10 site-ssh', 'drush10 sql-create', 'drush10 ssh', 'drush10 sup', 'drush11 archive-restore', 'drush11 arr', 'drush11 php', 'drush11 core-config', 'drush11 core-execute', 'drush11 core-quick-drupal', 'drush11 ev', 'drush11 exec', 'drush11 qd', 'drush11 rs', 'drush11 runserver', 'drush11 scr', 'drush11 sha', 'drush11 shell-alias', 'drush11 si', 'drush11 site-ssh', 'drush11 sql-create', 'drush11 ssh', 'drush11 sup', 'hosting_db_server', 'hostmaster', 'master_db', 'os.system', 'php-cli', 'php-script', 'pm-updatecode', 'self-update', 'selfupdate', 'server_localhost', 'server_master', 'shell', 'site-install', 'site-upgrade']

##  a list of allowed command to use with sudo(8)
##  if set to ´all', all the 'allowed' commands will be accessible through sudo(8)
#sudo_commands   : ['ls', 'more']

##  number of warnings when user enters a forbidden value before getting
##  exited from lshell, set to -1 to disable.
warning_counter : 3

##  command aliases list (similar to bash’s alias directive)
aliases         : {'1':'true', '2':'true', 'll':'ls -l --color=auto', 'drush':'drush8', 'drush dbup':'drush8 updatedb', 'drush mup':'drush8 pm-update', 'drush mupc':'drush8 pm-updatecode', 'drush mups':'drush8 pm-updatestatus', 'drush aliases':'drush8 site-alias | egrep -v "(none|hostmaster|hm|server_|platform_|@none|@self)"', 'drush10 aliases':'drush10 sa --format=list | egrep -v "(none|hostmaster|hm|server_|platform_|@none|@self)"', 'vdrush':'vendor/bin/drush', 'drush up':'thinkdifferent', 'drush upc':'thinkdifferent', 'drush updatedb':'thinkdifferent', 'drush updb':'thinkdifferent', 'env':'true', 'gem-dependency':'gem dependency', 'gem-environment':'gem environment', 'gem-list':'gem list', 'gem-query':'gem query', 'gem-search':'gem search', 'nano':'rnano', 'vi':'rvim', 'vim':'rvim'}

##  introduction text to print (when entering lshell)
intro           : "\n      ======== Welcome to the Aegir, Drush and Compass Shell ========\n\n         Type '?' or 'help' to get the list of allowed commands\n             Note that not all Drush commands are available\n\n       Use Gem and Bundler to manage all your Compass gems! Example:\n                   `gem install --conservative compass`\n\n              Use NPM to manage all your packages! Example:\n                        `npm install -g gulp`\n\n     To initialize Ruby use control file and re-login after 15 minutes\n                 `touch ~/static/control/compass.info`\n"

##  configure your promt using %u or %h (default: username)
#prompt          : "%u@%h"

##  set sort prompt current directory update (default: 0)
prompt_short    : 1

##  a value in seconds for the session timer
#timer           : 5

##  list of path to restrict the user "geographicaly"
##  warning: many commands like vi and less allow to break this restriction
#path            : ['/home/bla/','/etc']

##  set the home folder of your user. If not specified the home_path is set to
##  the $HOME environment variable
#home_path       : '/home/bla/'

##  update the environment variable $PATH of the user
env_path        : ':/usr/local/bin'

##  a list of path; all executable files inside these path will be allowed
#allowed_cmd_path: ['/home/bla/bin','/home/bla/stuff/libexec']

##  add environment variables
##env_vars        : {'TERM':'xterm+256color'}

##  allow or forbid the use of scp (set to 1 or 0)
scp             : 1

## forbid scp upload
scp_upload      : 1

## forbid scp download
scp_download    : 1

##  allow of forbid the use of sftp (set to 1 or 0)
##  this option will not work if you are using OpenSSH's internal-sftp service
sftp            : 1

##  list of command allowed to execute over ssh (e.g. rsync, rdiff-backup, etc.)
overssh         : ['cd', 'compass', 'composer', 'cp', 'drush', 'drush8', 'drush10', 'drush11', 'drush12', 'env', 'git-receive-pack', 'git-upload-archive', 'git-upload-pack', 'git', 'grep', 'ls', 'mv', 'mysql', 'mydumper', 'myloader', 'mysqldump', 'rm', 'rsync', 'scp', 'ssh-add', 'true', '1', '2']

##  logging strictness. If set to 1, any unknown command is considered as
##  forbidden, and user's warning counter is decreased. If set to 0, command is
##  considered as unknown, and user is only warned (i.e. *** unknown synthax)
strict          : 1

##  force files sent through scp to a specific directory
#scpforce        : '/home/bla/uploads/'

##  Enable support for WinSCP with scp mode (NOT sftp)
##  When enabled, the following parameters will be overridden:
##    - scp_upload: 1 (uses scp(1) from within session)
##    - scp_download: 1 (uses scp(1) from within session)
##    - scpforce - Ignore (uses scp(1) from within session)
##    - forbidden: -[';']
##    - allowed: +['scp', 'env', 'pwd', 'groups', 'unset', 'unalias']
#winscp: 0

##  history file maximum size
#history_size     : 100

##  set history file name (default is /home/%u/.lhistory)
#history_file     : "/home/%u/.lshell_history"

##  define the script to run at user login
#login_script     : "/path/to/myscript.sh"

[grp:ltd-shell]
forbidden       : + ['--destination']
