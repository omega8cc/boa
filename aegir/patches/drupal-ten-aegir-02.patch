diff -urp a/core/lib/Drupal/Core/Logger/LoggerChannel.php b/core/lib/Drupal/Core/Logger/LoggerChannel.php
--- a/core/lib/Drupal/Core/Logger/LoggerChannel.php	2023-12-23 03:12:54.060219719 +0100
+++ b/core/lib/Drupal/Core/Logger/LoggerChannel.php	2023-12-23 03:12:39.896219719 +0100
@@ -91,7 +91,7 @@ class LoggerChannel implements LoggerCha
   /**
    * {@inheritdoc}
    */
-  public function log($level, string|\Stringable $message, array $context = []): void {
+  public function log($level, $message, array $context = []) {
     if ($this->callDepth == self::MAX_CALL_DEPTH) {
       return;
     }
diff -urp a/core/lib/Drupal/Core/Logger/RfcLoggerTrait.php b/core/lib/Drupal/Core/Logger/RfcLoggerTrait.php
--- a/core/lib/Drupal/Core/Logger/RfcLoggerTrait.php	2023-12-23 03:12:54.060219719 +0100
+++ b/core/lib/Drupal/Core/Logger/RfcLoggerTrait.php	2023-12-23 03:12:39.896219719 +0100
@@ -17,62 +17,62 @@ trait RfcLoggerTrait {
   /**
    * {@inheritdoc}
    */
-  public function emergency(string|\Stringable $message, array $context = []): void {
+  public function emergency($message, array $context = []) {
     $this->log(RfcLogLevel::EMERGENCY, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function alert(string|\Stringable $message, array $context = []): void {
+  public function alert($message, array $context = []) {
     $this->log(RfcLogLevel::ALERT, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function critical(string|\Stringable $message, array $context = []): void {
+  public function critical($message, array $context = []) {
     $this->log(RfcLogLevel::CRITICAL, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function error(string|\Stringable $message, array $context = []): void {
+  public function error($message, array $context = []) {
     $this->log(RfcLogLevel::ERROR, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function warning(string|\Stringable $message, array $context = []): void {
+  public function warning($message, array $context = []) {
     $this->log(RfcLogLevel::WARNING, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function notice(string|\Stringable $message, array $context = []): void {
+  public function notice($message, array $context = []) {
     $this->log(RfcLogLevel::NOTICE, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function info(string|\Stringable $message, array $context = []): void {
+  public function info($message, array $context = []) {
     $this->log(RfcLogLevel::INFO, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  public function debug(string|\Stringable $message, array $context = []): void {
+  public function debug($message, array $context = []) {
     $this->log(RfcLogLevel::DEBUG, $message, $context);
   }

   /**
    * {@inheritdoc}
    */
-  abstract public function log($level, string|\Stringable $message, array $context = []): void;
+  abstract public function log($level, $message, array $context = []);

 }
diff -urp a/core/modules/dblog/src/Logger/DbLog.php b/core/modules/dblog/src/Logger/DbLog.php
--- a/core/modules/dblog/src/Logger/DbLog.php	2023-12-23 03:12:54.060219719 +0100
+++ b/core/modules/dblog/src/Logger/DbLog.php	2023-12-23 03:12:39.896219719 +0100
@@ -52,7 +52,7 @@ class DbLog implements LoggerInterface {
   /**
    * {@inheritdoc}
    */
-  public function log($level, string|\Stringable $message, array $context = []): void {
+  public function log($level, $message, array $context = []) {
     // Remove backtrace and exception since they may contain an unserializable variable.
     unset($context['backtrace'], $context['exception']);

diff -urp a/core/modules/syslog/src/Logger/SysLog.php b/core/modules/syslog/src/Logger/SysLog.php
--- a/core/modules/syslog/src/Logger/SysLog.php	2023-12-06 10:22:56.000000000 +0100
+++ b/core/modules/syslog/src/Logger/SysLog.php	2023-12-23 03:10:01.744219719 +0100
@@ -65,7 +65,7 @@ class SysLog implements LoggerInterface
   /**
    * {@inheritdoc}
    */
-  public function log($level, string|\Stringable $message, array $context = []): void {
+  public function log($level, $message, array $context = []) {
     global $base_url;

     $format = $this->config->get('format');
